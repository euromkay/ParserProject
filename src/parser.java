
//----------------------------------------------------
// The following code was generated by CUP v0.10k TUM Edition 20050516
// Wed Jan 07 21:22:40 PST 2015
//----------------------------------------------------

import java_cup.runtime.*;
import java.util.Vector;

/** CUP v0.10k TUM Edition 20050516 generated parser.
  * @version Wed Jan 07 21:22:40 PST 2015
  */
public class parser extends java_cup.runtime.lr_parser {

  /** Default constructor. */
  public parser() {super();}

  /** Constructor which sets the default scanner. */
  public parser(java_cup.runtime.Scanner s) {super(s);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\272\000\002\121\002\000\002\003\004\000\002\002" +
    "\004\000\002\004\003\000\002\004\002\000\002\005\003" +
    "\000\002\005\004\000\002\006\003\000\002\006\003\000" +
    "\002\006\003\000\002\006\003\000\002\006\003\000\002" +
    "\006\003\000\002\122\002\000\002\011\010\000\002\123" +
    "\002\000\002\012\011\000\002\124\002\000\002\012\011" +
    "\000\002\125\002\000\002\013\012\000\002\056\003\000" +
    "\002\056\002\000\002\126\002\000\002\127\002\000\002" +
    "\130\002\000\002\014\015\000\002\020\003\000\002\020" +
    "\004\000\002\021\006\000\002\022\003\000\002\022\002" +
    "\000\002\023\003\000\002\023\004\000\002\024\003\000" +
    "\002\024\003\000\002\131\002\000\002\132\002\000\002" +
    "\015\013\000\002\133\002\000\002\016\012\000\002\025" +
    "\003\000\002\025\002\000\002\026\003\000\002\026\004" +
    "\000\002\027\003\000\002\134\002\000\002\135\002\000" +
    "\002\136\002\000\002\007\020\000\002\137\002\000\002" +
    "\140\002\000\002\010\015\000\002\110\003\000\002\110" +
    "\003\000\002\111\003\000\002\111\004\000\002\106\004" +
    "\000\002\105\003\000\002\105\003\000\002\105\003\000" +
    "\002\107\003\000\002\112\003\000\002\112\003\000\002" +
    "\060\003\000\002\060\002\000\002\057\003\000\002\057" +
    "\004\000\002\055\003\000\002\113\003\000\002\113\002" +
    "\000\002\114\003\000\002\114\004\000\002\065\005\000" +
    "\002\141\002\000\002\142\002\000\002\033\007\000\002" +
    "\030\003\000\002\030\002\000\002\031\003\000\002\031" +
    "\004\000\002\032\003\000\002\032\003\000\002\032\003" +
    "\000\002\032\004\000\002\032\003\000\002\032\003\000" +
    "\002\032\003\000\002\032\003\000\002\032\003\000\002" +
    "\032\003\000\002\032\003\000\002\032\003\000\002\032" +
    "\003\000\002\117\003\000\002\117\002\000\002\120\003" +
    "\000\002\120\005\000\002\064\006\000\002\017\003\000" +
    "\002\017\002\000\002\104\004\000\002\104\002\000\002" +
    "\115\003\000\002\115\002\000\002\116\006\000\002\035" +
    "\006\000\002\036\004\000\002\036\002\000\002\040\005" +
    "\000\002\143\002\000\002\037\014\000\002\041\004\000" +
    "\002\042\004\000\002\043\007\000\002\044\004\000\002" +
    "\044\005\000\002\045\006\000\002\046\006\000\002\047" +
    "\003\000\002\047\005\000\002\050\003\000\002\050\003" +
    "\000\002\103\003\000\002\034\003\000\002\034\002\000" +
    "\002\051\003\000\002\051\005\000\002\066\005\000\002" +
    "\066\003\000\002\067\005\000\002\067\003\000\002\070" +
    "\005\000\002\070\003\000\002\071\005\000\002\071\003" +
    "\000\002\072\005\000\002\072\003\000\002\073\005\000" +
    "\002\073\003\000\002\074\005\000\002\074\003\000\002" +
    "\075\005\000\002\075\003\000\002\076\005\000\002\076" +
    "\003\000\002\077\005\000\002\077\003\000\002\053\003" +
    "\000\002\053\003\000\002\054\003\000\002\054\003\000" +
    "\002\054\003\000\002\054\003\000\002\061\003\000\002" +
    "\061\003\000\002\062\003\000\002\062\003\000\002\062" +
    "\003\000\002\063\003\000\002\063\003\000\002\100\004" +
    "\000\002\100\004\000\002\100\004\000\002\100\004\000" +
    "\002\100\006\000\002\100\007\000\002\100\006\000\002" +
    "\100\004\000\002\100\003\000\002\101\005\000\002\101" +
    "\006\000\002\101\005\000\002\101\004\000\002\101\006" +
    "\000\002\101\003\000\002\102\005\000\002\102\003\000" +
    "\002\102\003\000\002\102\003\000\002\102\003\000\002" +
    "\102\003\000\002\102\003\000\002\102\003\000\002\102" +
    "\004\000\002\102\003" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\u0136\000\026\002\001\006\001\014\001\024\001\026" +
    "\001\030\001\033\001\062\001\063\001\105\001\001\002" +
    "\000\004\002\u0138\001\002\000\026\002\ufffd\006\uffeb\014" +
    "\uffeb\024\007\026\uffeb\030\011\033\uffeb\062\015\063\012" +
    "\105\uffeb\001\002\000\026\002\ufff6\006\ufff6\014\ufff6\024" +
    "\ufff6\026\ufff6\030\ufff6\033\ufff6\062\ufff6\063\ufff6\105\ufff6" +
    "\001\002\000\012\006\032\026\034\030\u0129\033\035\001" +
    "\002\000\026\002\ufff7\006\ufff7\014\ufff7\024\ufff7\026\ufff7" +
    "\030\ufff7\033\ufff7\062\ufff7\063\ufff7\105\ufff7\001\002\000" +
    "\004\011\u011a\001\002\000\004\105\243\001\002\000\014" +
    "\006\032\014\033\026\034\033\035\105\030\001\002\000" +
    "\026\002\ufff9\006\ufff9\014\ufff9\024\ufff9\026\ufff9\030\ufff9" +
    "\033\ufff9\062\ufff9\063\ufff9\105\ufff9\001\002\000\014\006" +
    "\uffec\014\uffec\026\uffec\033\uffec\105\uffec\001\002\000\026" +
    "\002\ufffc\006\ufffc\014\ufffc\024\ufffc\026\ufffc\030\ufffc\033" +
    "\ufffc\062\ufffc\063\ufffc\105\ufffc\001\002\000\026\002\ufff5" +
    "\006\ufff5\014\ufff5\024\ufff5\026\ufff5\030\ufff5\033\ufff5\062" +
    "\ufff5\063\ufff5\105\ufff5\001\002\000\026\002\ufffe\006\uffeb" +
    "\014\uffeb\024\007\026\uffeb\030\011\033\uffeb\062\015\063" +
    "\012\105\uffeb\001\002\000\026\002\ufffa\006\ufffa\014\ufffa" +
    "\024\ufffa\026\ufffa\030\ufffa\033\ufffa\062\ufffa\063\ufffa\105" +
    "\ufffa\001\002\000\004\002\000\001\002\000\026\002\ufff8" +
    "\006\ufff8\014\ufff8\024\ufff8\026\ufff8\030\ufff8\033\ufff8\062" +
    "\ufff8\063\ufff8\105\ufff8\001\002\000\026\002\ufffb\006\ufffb" +
    "\014\ufffb\024\ufffb\026\ufffb\030\ufffb\033\ufffb\062\ufffb\063" +
    "\ufffb\105\ufffb\001\002\000\012\036\uffca\055\uffca\073\uffca" +
    "\106\uffca\001\002\000\004\106\234\001\002\000\014\036" +
    "\uffc0\055\uffc0\061\112\073\uffc0\106\uffc0\001\002\000\014" +
    "\036\uffc4\055\uffc4\061\uffc4\073\uffc4\106\uffc4\001\002\000" +
    "\006\061\112\106\220\001\002\000\014\036\uffc5\055\uffc5" +
    "\061\uffc5\073\uffc5\106\uffc5\001\002\000\010\006\032\026" +
    "\034\033\035\001\002\000\014\036\uffc6\055\uffc6\061\uffc6" +
    "\073\uffc6\106\uffc6\001\002\000\014\036\uffc7\055\uffc7\061" +
    "\uffc7\073\uffc7\106\uffc7\001\002\000\004\106\037\001\002" +
    "\000\004\005\040\001\002\000\042\012\076\025\064\037" +
    "\072\043\073\046\077\051\063\057\066\061\100\064\060" +
    "\066\052\073\070\076\061\102\075\103\062\104\044\106" +
    "\067\001\002\000\056\013\uff70\022\uff70\031\uff70\032\uff70" +
    "\035\uff70\040\uff70\041\uff70\042\uff70\044\170\045\uff70\047" +
    "\uff70\050\uff70\053\uff70\055\uff70\056\uff70\060\172\061\171" +
    "\072\uff70\073\uff70\074\uff70\075\uff70\077\uff70\001\002\000" +
    "\060\005\216\013\uff6e\022\uff6e\031\uff6e\032\uff6e\035\uff6e" +
    "\040\uff6e\041\uff6e\042\uff6e\044\uff6e\045\uff6e\047\uff6e\050" +
    "\uff6e\053\uff6e\055\uff6e\056\uff6e\060\uff6e\061\uff6e\072\uff6e" +
    "\073\uff6e\074\uff6e\075\uff6e\077\uff6e\001\002\000\050\013" +
    "\uff72\022\uff72\031\uff72\032\uff72\035\uff72\040\uff72\041\uff72" +
    "\042\165\045\uff72\047\uff72\050\164\053\uff72\055\uff72\056" +
    "\uff72\072\uff72\073\uff72\074\uff72\075\uff72\077\uff72\001\002" +
    "\000\074\004\uff4e\005\uff4e\013\uff4e\017\uff4e\022\uff4e\031" +
    "\uff4e\032\uff4e\035\uff4e\036\uff4e\037\uff4e\040\uff4e\041\uff4e" +
    "\042\uff4e\043\uff4e\044\uff4e\045\uff4e\047\uff4e\050\uff4e\051" +
    "\uff4e\053\uff4e\055\uff4e\056\uff4e\060\uff4e\061\uff4e\072\uff4e" +
    "\073\uff4e\074\uff4e\075\uff4e\077\uff4e\001\002\000\044\013" +
    "\uff74\022\uff74\031\162\032\156\035\uff74\040\160\041\157" +
    "\045\uff74\047\uff74\053\uff74\055\uff74\056\uff74\072\uff74\073" +
    "\uff74\074\uff74\075\uff74\077\uff74\001\002\000\034\013\uff76" +
    "\022\154\035\uff76\045\153\047\uff76\053\uff76\055\uff76\056" +
    "\uff76\072\uff76\073\uff76\074\uff76\075\uff76\077\uff76\001\002" +
    "\000\074\004\uff52\005\uff52\013\uff52\017\uff52\022\uff52\031" +
    "\uff52\032\uff52\035\uff52\036\uff52\037\uff52\040\uff52\041\uff52" +
    "\042\uff52\043\uff52\044\uff52\045\uff52\047\uff52\050\uff52\051" +
    "\uff52\053\uff52\055\uff52\056\uff52\060\uff52\061\uff52\072\uff52" +
    "\073\uff52\074\uff52\075\uff52\077\uff52\001\002\000\074\004" +
    "\202\005\uff58\013\uff58\017\203\022\uff58\031\uff58\032\uff58" +
    "\035\uff58\036\177\037\200\040\uff58\041\uff58\042\uff58\043" +
    "\073\044\uff58\045\uff58\047\uff58\050\uff58\051\063\053\uff58" +
    "\055\uff58\056\uff58\060\uff58\061\uff58\072\uff58\073\uff58\074" +
    "\uff58\075\uff58\077\uff58\001\002\000\030\013\uff78\035\uff78" +
    "\047\uff78\053\uff78\055\uff78\056\uff78\072\uff78\073\150\074" +
    "\uff78\075\uff78\077\uff78\001\002\000\074\004\uff4d\005\uff4d" +
    "\013\uff4d\017\uff4d\022\uff4d\031\uff4d\032\uff4d\035\uff4d\036" +
    "\uff4d\037\uff4d\040\uff4d\041\uff4d\042\uff4d\043\uff4d\044\uff4d" +
    "\045\uff4d\047\uff4d\050\uff4d\051\uff4d\053\uff4d\055\uff4d\056" +
    "\uff4d\060\uff4d\061\uff4d\072\uff4d\073\uff4d\074\uff4d\075\uff4d" +
    "\077\uff4d\001\002\000\004\056\uffee\001\002\000\026\013" +
    "\uff7a\035\uff7a\047\uff7a\053\uff7a\055\uff7a\056\uff7a\072\uff7a" +
    "\074\uff7a\075\146\077\uff7a\001\002\000\024\013\uff7c\035" +
    "\uff7c\047\uff7c\053\uff7c\055\uff7c\056\uff7c\072\uff7c\074\144" +
    "\077\uff7c\001\002\000\022\013\uff7e\035\uff7e\047\uff7e\053" +
    "\uff7e\055\uff7e\056\uff7e\072\142\077\uff7e\001\002\000\020" +
    "\013\uff80\035\uff80\047\uff80\053\uff80\055\uff80\056\uff80\077" +
    "\137\001\002\000\074\004\uff4a\005\uff4a\013\uff4a\017\uff4a" +
    "\022\uff4a\031\uff4a\032\uff4a\035\uff4a\036\uff4a\037\uff4a\040" +
    "\uff4a\041\uff4a\042\uff4a\043\uff4a\044\uff4a\045\uff4a\047\uff4a" +
    "\050\uff4a\051\uff4a\053\uff4a\055\uff4a\056\uff4a\060\uff4a\061" +
    "\uff4a\072\uff4a\073\uff4a\074\uff4a\075\uff4a\077\uff4a\001\002" +
    "\000\042\012\076\025\064\037\072\043\073\046\077\051" +
    "\063\057\066\061\100\064\060\066\052\073\070\076\061" +
    "\102\075\103\062\104\044\106\067\001\002\000\074\004" +
    "\uff50\005\uff50\013\uff50\017\uff50\022\uff50\031\uff50\032\uff50" +
    "\035\uff50\036\uff50\037\uff50\040\uff50\041\uff50\042\uff50\043" +
    "\uff50\044\uff50\045\uff50\047\uff50\050\uff50\051\uff50\053\uff50" +
    "\055\uff50\056\uff50\060\uff50\061\uff50\072\uff50\073\uff50\074" +
    "\uff50\075\uff50\077\uff50\001\002\000\122\004\uff62\005\uff62" +
    "\012\uff62\013\uff62\017\uff62\022\uff62\025\uff62\031\uff62\032" +
    "\uff62\035\uff62\036\uff62\037\uff62\040\uff62\041\uff62\042\uff62" +
    "\043\uff62\044\uff62\045\uff62\046\uff62\047\uff62\050\uff62\051" +
    "\uff62\053\uff62\055\uff62\056\uff62\057\uff62\060\uff62\061\uff62" +
    "\064\uff62\066\uff62\072\uff62\073\uff62\074\uff62\075\uff62\076" +
    "\uff62\077\uff62\102\uff62\103\uff62\104\uff62\106\uff62\001\002" +
    "\000\074\004\uff4c\005\uff4c\013\uff4c\017\uff4c\022\uff4c\031" +
    "\uff4c\032\uff4c\035\uff4c\036\uff4c\037\uff4c\040\uff4c\041\uff4c" +
    "\042\uff4c\043\uff4c\044\uff4c\045\uff4c\047\uff4c\050\uff4c\051" +
    "\uff4c\053\uff4c\055\uff4c\056\uff4c\060\uff4c\061\uff4c\072\uff4c" +
    "\073\uff4c\074\uff4c\075\uff4c\077\uff4c\001\002\000\006\053" +
    "\uff86\056\uff86\001\002\000\004\037\120\001\002\000\074" +
    "\004\uff48\005\uff48\013\uff48\017\uff48\022\uff48\031\uff48\032" +
    "\uff48\035\uff48\036\uff48\037\uff48\040\uff48\041\uff48\042\uff48" +
    "\043\uff48\044\uff48\045\uff48\047\uff48\050\uff48\051\uff48\053" +
    "\uff48\055\uff48\056\uff48\060\uff48\061\uff48\072\uff48\073\uff48" +
    "\074\uff48\075\uff48\077\uff48\001\002\000\042\012\076\025" +
    "\064\037\072\043\073\046\077\051\063\057\066\061\100" +
    "\064\060\066\052\073\070\076\061\102\075\103\062\104" +
    "\044\106\067\001\002\000\042\012\076\025\064\037\072" +
    "\043\073\046\077\051\063\057\066\061\100\064\060\066" +
    "\052\073\070\076\061\102\075\103\062\104\044\106\067" +
    "\001\002\000\052\006\032\012\076\025\064\026\034\033" +
    "\035\037\072\043\073\046\077\051\063\057\066\061\100" +
    "\064\060\066\052\073\070\076\061\102\075\103\062\104" +
    "\044\105\030\106\067\001\002\000\122\004\uff61\005\uff61" +
    "\012\uff61\013\uff61\017\uff61\022\uff61\025\uff61\031\uff61\032" +
    "\uff61\035\uff61\036\uff61\037\uff61\040\uff61\041\uff61\042\uff61" +
    "\043\uff61\044\uff61\045\uff61\046\uff61\047\uff61\050\uff61\051" +
    "\uff61\053\uff61\055\uff61\056\uff61\057\uff61\060\uff61\061\uff61" +
    "\064\uff61\066\uff61\072\uff61\073\uff61\074\uff61\075\uff61\076" +
    "\uff61\077\uff61\102\uff61\103\uff61\104\uff61\106\uff61\001\002" +
    "\000\042\012\076\025\064\037\072\043\073\046\077\051" +
    "\063\057\066\061\100\064\060\066\052\073\070\076\061" +
    "\102\075\103\062\104\044\106\067\001\002\000\074\004" +
    "\uff4f\005\uff4f\013\uff4f\017\uff4f\022\uff4f\031\uff4f\032\uff4f" +
    "\035\uff4f\036\uff4f\037\uff4f\040\uff4f\041\uff4f\042\uff4f\043" +
    "\uff4f\044\uff4f\045\uff4f\047\uff4f\050\uff4f\051\uff4f\053\uff4f" +
    "\055\uff4f\056\uff4f\060\uff4f\061\uff4f\072\uff4f\073\uff4f\074" +
    "\uff4f\075\uff4f\077\uff4f\001\002\000\004\106\102\001\002" +
    "\000\074\004\uff4b\005\uff4b\013\uff4b\017\uff4b\022\uff4b\031" +
    "\uff4b\032\uff4b\035\uff4b\036\uff4b\037\uff4b\040\uff4b\041\uff4b" +
    "\042\uff4b\043\uff4b\044\uff4b\045\uff4b\047\uff4b\050\uff4b\051" +
    "\uff4b\053\uff4b\055\uff4b\056\uff4b\060\uff4b\061\uff4b\072\uff4b" +
    "\073\uff4b\074\uff4b\075\uff4b\077\uff4b\001\002\000\042\012" +
    "\076\025\064\037\072\043\073\046\077\051\063\057\066" +
    "\061\100\064\060\066\052\073\070\076\061\102\075\103" +
    "\062\104\044\106\067\001\002\000\060\005\uff60\013\uff60" +
    "\022\uff60\031\uff60\032\uff60\035\uff60\040\uff60\041\uff60\042" +
    "\uff60\044\uff60\045\uff60\047\uff60\050\uff60\053\uff60\055\uff60" +
    "\056\uff60\060\uff60\061\uff60\072\uff60\073\uff60\074\uff60\075" +
    "\uff60\077\uff60\001\002\000\074\004\uff49\005\uff49\013\uff49" +
    "\017\uff49\022\uff49\031\uff49\032\uff49\035\uff49\036\uff49\037" +
    "\uff49\040\uff49\041\uff49\042\uff49\043\uff49\044\uff49\045\uff49" +
    "\047\uff49\050\uff49\051\uff49\053\uff49\055\uff49\056\uff49\060" +
    "\uff49\061\uff49\072\uff49\073\uff49\074\uff49\075\uff49\077\uff49" +
    "\001\002\000\060\005\uff5e\013\uff5e\022\uff5e\031\uff5e\032" +
    "\uff5e\035\uff5e\040\uff5e\041\uff5e\042\uff5e\044\uff5e\045\uff5e" +
    "\047\uff5e\050\uff5e\053\uff5e\055\uff5e\056\uff5e\060\uff5e\061" +
    "\uff5e\072\uff5e\073\uff5e\074\uff5e\075\uff5e\077\uff5e\001\002" +
    "\000\004\061\112\001\002\000\004\055\110\001\002\000" +
    "\004\055\107\001\002\000\074\004\uff51\005\uff51\013\uff51" +
    "\017\uff51\022\uff51\031\uff51\032\uff51\035\uff51\036\uff51\037" +
    "\uff51\040\uff51\041\uff51\042\uff51\043\uff51\044\uff51\045\uff51" +
    "\047\uff51\050\uff51\051\uff51\053\uff51\055\uff51\056\uff51\060" +
    "\uff51\061\uff51\072\uff51\073\uff51\074\uff51\075\uff51\077\uff51" +
    "\001\002\000\042\012\076\025\064\037\072\043\073\046" +
    "\077\051\063\057\066\061\100\064\060\066\052\073\070" +
    "\076\061\102\075\103\062\104\044\106\067\001\002\000" +
    "\060\005\uff5a\013\uff5a\022\uff5a\031\uff5a\032\uff5a\035\uff5a" +
    "\040\uff5a\041\uff5a\042\uff5a\044\uff5a\045\uff5a\047\uff5a\050" +
    "\uff5a\053\uff5a\055\uff5a\056\uff5a\060\uff5a\061\uff5a\072\uff5a" +
    "\073\uff5a\074\uff5a\075\uff5a\077\uff5a\001\002\000\014\036" +
    "\uffbd\055\uffbd\061\uffbd\073\uffbd\106\uffbd\001\002\000\014" +
    "\036\uffc9\055\uffc9\061\112\073\uffc9\106\uffc9\001\002\000" +
    "\014\036\uffbf\055\uffbf\061\uffbf\073\uffbf\106\uffbf\001\002" +
    "\000\014\036\uffbe\055\uffbe\061\uffbe\073\uffbe\106\uffbe\001" +
    "\002\000\060\005\uff59\013\uff59\022\uff59\031\uff59\032\uff59" +
    "\035\uff59\040\uff59\041\uff59\042\uff59\044\uff59\045\uff59\047" +
    "\uff59\050\uff59\053\uff59\055\uff59\056\uff59\060\uff59\061\uff59" +
    "\072\uff59\073\uff59\074\uff59\075\uff59\077\uff59\001\002\000" +
    "\060\005\uff5f\013\uff5f\022\uff5f\031\uff5f\032\uff5f\035\uff5f" +
    "\040\uff5f\041\uff5f\042\uff5f\044\uff5f\045\uff5f\047\uff5f\050" +
    "\uff5f\053\uff5f\055\uff5f\056\uff5f\060\uff5f\061\uff5f\072\uff5f" +
    "\073\uff5f\074\uff5f\075\uff5f\077\uff5f\001\002\000\052\006" +
    "\032\012\076\025\064\026\034\033\035\037\072\043\073" +
    "\046\077\051\063\057\066\061\100\064\060\066\052\073" +
    "\070\076\061\102\075\103\062\104\044\105\030\106\067" +
    "\001\002\000\004\055\135\001\002\000\014\036\uffcb\055" +
    "\uffcb\061\112\073\uffcb\106\uffcb\001\002\000\006\036\126" +
    "\055\uffbb\001\002\000\012\036\uffcc\055\uffcc\073\uffcc\106" +
    "\uffcc\001\002\000\016\005\uffbc\011\uffbc\013\uffbc\036\126" +
    "\055\uffbc\056\uffbc\001\002\000\042\012\076\025\064\037" +
    "\072\043\073\046\077\051\063\057\066\061\100\064\060" +
    "\066\052\073\070\076\061\102\075\103\062\104\044\106" +
    "\067\001\002\000\004\055\131\001\002\000\016\005\uffba" +
    "\011\uffba\013\uffba\036\uffba\055\uffba\056\uffba\001\002\000" +
    "\060\005\uff5b\013\uff5b\022\uff5b\031\uff5b\032\uff5b\035\uff5b" +
    "\040\uff5b\041\uff5b\042\uff5b\044\uff5b\045\uff5b\047\uff5b\050" +
    "\uff5b\053\uff5b\055\uff5b\056\uff5b\060\uff5b\061\uff5b\072\uff5b" +
    "\073\uff5b\074\uff5b\075\uff5b\077\uff5b\001\002\000\004\053" +
    "\133\001\002\000\016\005\uffb8\011\uffb8\013\uffb8\036\uffb8" +
    "\055\uffb8\056\uffb8\001\002\000\016\005\uffb9\011\uffb9\013" +
    "\uffb9\036\uffb9\055\uffb9\056\uffb9\001\002\000\060\005\uff5c" +
    "\013\uff5c\022\uff5c\031\uff5c\032\uff5c\035\uff5c\040\uff5c\041" +
    "\uff5c\042\uff5c\044\uff5c\045\uff5c\047\uff5c\050\uff5c\053\uff5c" +
    "\055\uff5c\056\uff5c\060\uff5c\061\uff5c\072\uff5c\073\uff5c\074" +
    "\uff5c\075\uff5c\077\uff5c\001\002\000\060\005\uff5d\013\uff5d" +
    "\022\uff5d\031\uff5d\032\uff5d\035\uff5d\040\uff5d\041\uff5d\042" +
    "\uff5d\044\uff5d\045\uff5d\047\uff5d\050\uff5d\053\uff5d\055\uff5d" +
    "\056\uff5d\060\uff5d\061\uff5d\072\uff5d\073\uff5d\074\uff5d\075" +
    "\uff5d\077\uff5d\001\002\000\042\012\076\025\064\037\072" +
    "\043\073\046\077\051\063\057\066\061\100\064\060\066" +
    "\052\073\070\076\061\102\075\103\062\104\044\106\067" +
    "\001\002\000\056\013\uff6e\022\uff6e\031\uff6e\032\uff6e\035" +
    "\uff6e\040\uff6e\041\uff6e\042\uff6e\044\uff6e\045\uff6e\047\uff6e" +
    "\050\uff6e\053\uff6e\055\uff6e\056\uff6e\060\uff6e\061\uff6e\072" +
    "\uff6e\073\uff6e\074\uff6e\075\uff6e\077\uff6e\001\002\000\022" +
    "\013\uff7f\035\uff7f\047\uff7f\053\uff7f\055\uff7f\056\uff7f\072" +
    "\142\077\uff7f\001\002\000\042\012\076\025\064\037\072" +
    "\043\073\046\077\051\063\057\066\061\100\064\060\066" +
    "\052\073\070\076\061\102\075\103\062\104\044\106\067" +
    "\001\002\000\024\013\uff7d\035\uff7d\047\uff7d\053\uff7d\055" +
    "\uff7d\056\uff7d\072\uff7d\074\144\077\uff7d\001\002\000\042" +
    "\012\076\025\064\037\072\043\073\046\077\051\063\057" +
    "\066\061\100\064\060\066\052\073\070\076\061\102\075" +
    "\103\062\104\044\106\067\001\002\000\026\013\uff7b\035" +
    "\uff7b\047\uff7b\053\uff7b\055\uff7b\056\uff7b\072\uff7b\074\uff7b" +
    "\075\146\077\uff7b\001\002\000\042\012\076\025\064\037" +
    "\072\043\073\046\077\051\063\057\066\061\100\064\060" +
    "\066\052\073\070\076\061\102\075\103\062\104\044\106" +
    "\067\001\002\000\030\013\uff79\035\uff79\047\uff79\053\uff79" +
    "\055\uff79\056\uff79\072\uff79\073\150\074\uff79\075\uff79\077" +
    "\uff79\001\002\000\042\012\076\025\064\037\072\043\073" +
    "\046\077\051\063\057\066\061\100\064\060\066\052\073" +
    "\070\076\061\102\075\103\062\104\044\106\067\001\002" +
    "\000\034\013\uff77\022\154\035\uff77\045\153\047\uff77\053" +
    "\uff77\055\uff77\056\uff77\072\uff77\073\uff77\074\uff77\075\uff77" +
    "\077\uff77\001\002\000\042\012\076\025\064\037\072\043" +
    "\073\046\077\051\063\057\066\061\100\064\060\066\052" +
    "\073\070\076\061\102\075\103\062\104\044\106\067\001" +
    "\002\000\042\012\uff6c\025\uff6c\037\uff6c\043\uff6c\046\uff6c" +
    "\051\uff6c\057\uff6c\061\uff6c\064\uff6c\066\uff6c\073\uff6c\076" +
    "\uff6c\102\uff6c\103\uff6c\104\uff6c\106\uff6c\001\002\000\042" +
    "\012\uff6d\025\uff6d\037\uff6d\043\uff6d\046\uff6d\051\uff6d\057" +
    "\uff6d\061\uff6d\064\uff6d\066\uff6d\073\uff6d\076\uff6d\102\uff6d" +
    "\103\uff6d\104\uff6d\106\uff6d\001\002\000\044\013\uff75\022" +
    "\uff75\031\162\032\156\035\uff75\040\160\041\157\045\uff75" +
    "\047\uff75\053\uff75\055\uff75\056\uff75\072\uff75\073\uff75\074" +
    "\uff75\075\uff75\077\uff75\001\002\000\042\012\uff68\025\uff68" +
    "\037\uff68\043\uff68\046\uff68\051\uff68\057\uff68\061\uff68\064" +
    "\uff68\066\uff68\073\uff68\076\uff68\102\uff68\103\uff68\104\uff68" +
    "\106\uff68\001\002\000\042\012\uff69\025\uff69\037\uff69\043" +
    "\uff69\046\uff69\051\uff69\057\uff69\061\uff69\064\uff69\066\uff69" +
    "\073\uff69\076\uff69\102\uff69\103\uff69\104\uff69\106\uff69\001" +
    "\002\000\042\012\uff6b\025\uff6b\037\uff6b\043\uff6b\046\uff6b" +
    "\051\uff6b\057\uff6b\061\uff6b\064\uff6b\066\uff6b\073\uff6b\076" +
    "\uff6b\102\uff6b\103\uff6b\104\uff6b\106\uff6b\001\002\000\042" +
    "\012\076\025\064\037\072\043\073\046\077\051\063\057" +
    "\066\061\100\064\060\066\052\073\070\076\061\102\075" +
    "\103\062\104\044\106\067\001\002\000\042\012\uff6a\025" +
    "\uff6a\037\uff6a\043\uff6a\046\uff6a\051\uff6a\057\uff6a\061\uff6a" +
    "\064\uff6a\066\uff6a\073\uff6a\076\uff6a\102\uff6a\103\uff6a\104" +
    "\uff6a\106\uff6a\001\002\000\050\013\uff73\022\uff73\031\uff73" +
    "\032\uff73\035\uff73\040\uff73\041\uff73\042\165\045\uff73\047" +
    "\uff73\050\164\053\uff73\055\uff73\056\uff73\072\uff73\073\uff73" +
    "\074\uff73\075\uff73\077\uff73\001\002\000\042\012\uff67\025" +
    "\uff67\037\uff67\043\uff67\046\uff67\051\uff67\057\uff67\061\uff67" +
    "\064\uff67\066\uff67\073\uff67\076\uff67\102\uff67\103\uff67\104" +
    "\uff67\106\uff67\001\002\000\042\012\uff66\025\uff66\037\uff66" +
    "\043\uff66\046\uff66\051\uff66\057\uff66\061\uff66\064\uff66\066" +
    "\uff66\073\uff66\076\uff66\102\uff66\103\uff66\104\uff66\106\uff66" +
    "\001\002\000\042\012\076\025\064\037\072\043\073\046" +
    "\077\051\063\057\066\061\100\064\060\066\052\073\070" +
    "\076\061\102\075\103\062\104\044\106\067\001\002\000" +
    "\056\013\uff71\022\uff71\031\uff71\032\uff71\035\uff71\040\uff71" +
    "\041\uff71\042\uff71\044\170\045\uff71\047\uff71\050\uff71\053" +
    "\uff71\055\uff71\056\uff71\060\172\061\171\072\uff71\073\uff71" +
    "\074\uff71\075\uff71\077\uff71\001\002\000\042\012\uff63\025" +
    "\uff63\037\uff63\043\uff63\046\uff63\051\uff63\057\uff63\061\uff63" +
    "\064\uff63\066\uff63\073\uff63\076\uff63\102\uff63\103\uff63\104" +
    "\uff63\106\uff63\001\002\000\042\012\uff65\025\uff65\037\uff65" +
    "\043\uff65\046\uff65\051\uff65\057\uff65\061\uff65\064\uff65\066" +
    "\uff65\073\uff65\076\uff65\102\uff65\103\uff65\104\uff65\106\uff65" +
    "\001\002\000\042\012\uff64\025\uff64\037\uff64\043\uff64\046" +
    "\uff64\051\uff64\057\uff64\061\uff64\064\uff64\066\uff64\073\uff64" +
    "\076\uff64\102\uff64\103\uff64\104\uff64\106\uff64\001\002\000" +
    "\042\012\076\025\064\037\072\043\073\046\077\051\063" +
    "\057\066\061\100\064\060\066\052\073\070\076\061\102" +
    "\075\103\062\104\044\106\067\001\002\000\056\013\uff6f" +
    "\022\uff6f\031\uff6f\032\uff6f\035\uff6f\040\uff6f\041\uff6f\042" +
    "\uff6f\044\uff6f\045\uff6f\047\uff6f\050\uff6f\053\uff6f\055\uff6f" +
    "\056\uff6f\060\uff6f\061\uff6f\072\uff6f\073\uff6f\074\uff6f\075" +
    "\uff6f\077\uff6f\001\002\000\004\056\176\001\002\000\114" +
    "\002\uffed\006\uffed\007\uffed\010\uffed\012\uffed\014\uffed\015" +
    "\uffed\016\uffed\023\uffed\024\uffed\025\uffed\026\uffed\027\uffed" +
    "\030\uffed\033\uffed\035\uffed\037\uffed\043\uffed\046\uffed\051" +
    "\uffed\052\uffed\054\uffed\057\uffed\061\uffed\062\uffed\063\uffed" +
    "\064\uffed\066\uffed\070\uffed\071\uffed\073\uffed\076\uffed\102" +
    "\uffed\103\uffed\104\uffed\105\uffed\106\uffed\001\002\000\042" +
    "\012\076\025\064\037\072\043\073\046\077\051\063\057" +
    "\066\061\100\064\060\066\052\073\070\076\061\102\075" +
    "\103\062\104\044\106\067\001\002\000\044\012\076\025" +
    "\064\037\072\043\073\046\077\051\063\055\uff84\057\066" +
    "\061\100\064\060\066\052\073\070\076\061\102\075\103" +
    "\062\104\044\106\067\001\002\000\074\004\uff54\005\uff54" +
    "\013\uff54\017\uff54\022\uff54\031\uff54\032\uff54\035\uff54\036" +
    "\uff54\037\uff54\040\uff54\041\uff54\042\uff54\043\uff54\044\uff54" +
    "\045\uff54\047\uff54\050\uff54\051\uff54\053\uff54\055\uff54\056" +
    "\uff54\060\uff54\061\uff54\072\uff54\073\uff54\074\uff54\075\uff54" +
    "\077\uff54\001\002\000\004\106\205\001\002\000\004\106" +
    "\204\001\002\000\074\004\uff57\005\uff57\013\uff57\017\uff57" +
    "\022\uff57\031\uff57\032\uff57\035\uff57\036\uff57\037\uff57\040" +
    "\uff57\041\uff57\042\uff57\043\uff57\044\uff57\045\uff57\047\uff57" +
    "\050\uff57\051\uff57\053\uff57\055\uff57\056\uff57\060\uff57\061" +
    "\uff57\072\uff57\073\uff57\074\uff57\075\uff57\077\uff57\001\002" +
    "\000\074\004\uff55\005\uff55\013\uff55\017\uff55\022\uff55\031" +
    "\uff55\032\uff55\035\uff55\036\uff55\037\uff55\040\uff55\041\uff55" +
    "\042\uff55\043\uff55\044\uff55\045\uff55\047\uff55\050\uff55\051" +
    "\uff55\053\uff55\055\uff55\056\uff55\060\uff55\061\uff55\072\uff55" +
    "\073\uff55\074\uff55\075\uff55\077\uff55\001\002\000\006\013" +
    "\uff83\055\uff83\001\002\000\006\013\212\055\uff85\001\002" +
    "\000\004\055\211\001\002\000\074\004\uff53\005\uff53\013" +
    "\uff53\017\uff53\022\uff53\031\uff53\032\uff53\035\uff53\036\uff53" +
    "\037\uff53\040\uff53\041\uff53\042\uff53\043\uff53\044\uff53\045" +
    "\uff53\047\uff53\050\uff53\051\uff53\053\uff53\055\uff53\056\uff53" +
    "\060\uff53\061\uff53\072\uff53\073\uff53\074\uff53\075\uff53\077" +
    "\uff53\001\002\000\042\012\076\025\064\037\072\043\073" +
    "\046\077\051\063\057\066\061\100\064\060\066\052\073" +
    "\070\076\061\102\075\103\062\104\044\106\067\001\002" +
    "\000\006\013\uff82\055\uff82\001\002\000\004\053\215\001" +
    "\002\000\074\004\uff56\005\uff56\013\uff56\017\uff56\022\uff56" +
    "\031\uff56\032\uff56\035\uff56\036\uff56\037\uff56\040\uff56\041" +
    "\uff56\042\uff56\043\uff56\044\uff56\045\uff56\047\uff56\050\uff56" +
    "\051\uff56\053\uff56\055\uff56\056\uff56\060\uff56\061\uff56\072" +
    "\uff56\073\uff56\074\uff56\075\uff56\077\uff56\001\002\000\042" +
    "\012\076\025\064\037\072\043\073\046\077\051\063\057" +
    "\066\061\100\064\060\066\052\073\070\076\061\102\075" +
    "\103\062\104\044\106\067\001\002\000\016\013\uff81\035" +
    "\uff81\047\uff81\053\uff81\055\uff81\056\uff81\001\002\000\010" +
    "\011\uffbb\036\126\056\uffbb\001\002\000\006\011\222\056" +
    "\uff99\001\002\000\004\037\227\001\002\000\004\056\uff9a" +
    "\001\002\000\004\056\ufff0\001\002\000\004\056\226\001" +
    "\002\000\114\002\uffef\006\uffef\007\uffef\010\uffef\012\uffef" +
    "\014\uffef\015\uffef\016\uffef\023\uffef\024\uffef\025\uffef\026" +
    "\uffef\027\uffef\030\uffef\033\uffef\035\uffef\037\uffef\043\uffef" +
    "\046\uffef\051\uffef\052\uffef\054\uffef\057\uffef\061\uffef\062" +
    "\uffef\063\uffef\064\uffef\066\uffef\070\uffef\071\uffef\073\uffef" +
    "\076\uffef\102\uffef\103\uffef\104\uffef\105\uffef\106\uffef\001" +
    "\002\000\044\012\076\025\064\037\072\043\073\046\077" +
    "\051\063\055\uff84\057\066\061\100\064\060\066\052\073" +
    "\070\076\061\102\075\103\062\104\044\106\067\001\002" +
    "\000\004\055\231\001\002\000\004\056\uff98\001\002\000" +
    "\012\036\uffc8\055\uffc8\073\uffc8\106\uffc8\001\002\000\014" +
    "\036\uffc1\055\uffc1\061\112\073\uffc1\106\uffc1\001\002\000" +
    "\010\005\uffbb\036\126\056\uffbb\001\002\000\006\005\237" +
    "\056\uff9b\001\002\000\004\056\ufff2\001\002\000\042\012" +
    "\076\025\064\037\072\043\073\046\077\051\063\057\066" +
    "\061\100\064\060\066\052\073\070\076\061\102\075\103" +
    "\062\104\044\106\067\001\002\000\004\056\uff9c\001\002" +
    "\000\004\056\242\001\002\000\114\002\ufff1\006\ufff1\007" +
    "\ufff1\010\ufff1\012\ufff1\014\ufff1\015\ufff1\016\ufff1\023\ufff1" +
    "\024\ufff1\025\ufff1\026\ufff1\027\ufff1\030\ufff1\033\ufff1\035" +
    "\ufff1\037\ufff1\043\ufff1\046\ufff1\051\ufff1\052\ufff1\054\ufff1" +
    "\057\ufff1\061\ufff1\062\ufff1\063\ufff1\064\ufff1\066\ufff1\070" +
    "\ufff1\071\ufff1\073\ufff1\076\ufff1\102\ufff1\103\ufff1\104\ufff1" +
    "\105\ufff1\106\ufff1\001\002\000\004\035\244\001\002\000" +
    "\012\006\uffea\026\uffea\033\uffea\105\uffea\001\002\000\012" +
    "\006\032\026\034\033\035\105\030\001\002\000\020\006" +
    "\032\026\034\030\uffe2\033\035\052\uffe2\065\255\105\257" +
    "\001\002\000\004\106\251\001\002\000\020\006\uffe6\026" +
    "\uffe6\030\uffe6\033\uffe6\052\uffe6\065\uffe6\105\uffe6\001\002" +
    "\000\006\036\126\056\uffbb\001\002\000\004\056\253\001" +
    "\002\000\020\006\uffe4\026\uffe4\030\uffe4\033\uffe4\052\uffe4" +
    "\065\uffe4\105\uffe4\001\002\000\012\030\uffde\052\uffde\065" +
    "\uffde\105\uffde\001\002\000\004\105\u0113\001\002\000\020" +
    "\006\uffe5\026\uffe5\030\uffe5\033\uffe5\052\uffe5\065\uffe5\105" +
    "\uffe5\001\002\000\006\037\uffdd\061\uffc4\001\002\000\012" +
    "\030\uffe3\052\uffe3\065\255\105\275\001\002\000\012\030" +
    "\uffe1\052\uffe1\065\uffe1\105\uffe1\001\002\000\012\030\uffdf" +
    "\052\uffdf\065\uffdf\105\uffdf\001\002\000\006\030\uffe9\052" +
    "\uffe9\001\002\000\006\030\011\052\uffd7\001\002\000\006" +
    "\030\uffd6\052\uffd6\001\002\000\006\030\011\052\uffd8\001" +
    "\002\000\006\030\uffd4\052\uffd4\001\002\000\004\052\uffe8" +
    "\001\002\000\004\052\272\001\002\000\004\056\273\001" +
    "\002\000\026\002\uffe7\006\uffe7\014\uffe7\024\uffe7\026\uffe7" +
    "\030\uffe7\033\uffe7\062\uffe7\063\uffe7\105\uffe7\001\002\000" +
    "\006\030\uffd5\052\uffd5\001\002\000\004\037\uffdd\001\002" +
    "\000\012\030\uffe0\052\uffe0\065\uffe0\105\uffe0\001\002\000" +
    "\004\037\300\001\002\000\014\006\032\026\034\033\035" +
    "\055\uffa2\105\030\001\002\000\006\073\351\106\uff9d\001" +
    "\002\000\006\013\u010e\055\uffa3\001\002\000\006\013\uffa1" +
    "\055\uffa1\001\002\000\004\055\305\001\002\000\004\035" +
    "\uffdc\001\002\000\004\035\307\001\002\000\104\006\uffeb" +
    "\007\334\010\324\012\076\014\uffeb\015\314\016\313\023" +
    "\330\025\064\026\uffeb\027\336\033\uffeb\035\321\037\072" +
    "\043\073\046\077\051\063\052\uffb3\054\316\057\066\061" +
    "\100\062\015\064\060\066\052\070\340\071\312\073\070" +
    "\076\061\102\075\103\062\104\044\105\uffeb\106\067\001" +
    "\002\000\104\006\uffa7\007\uffa7\010\uffa7\012\uffa7\014\uffa7" +
    "\015\uffa7\016\uffa7\023\uffa7\025\uffa7\026\uffa7\027\uffa7\033" +
    "\uffa7\035\uffa7\037\uffa7\043\uffa7\046\uffa7\051\uffa7\052\uffa7" +
    "\054\uffa7\057\uffa7\061\uffa7\062\uffa7\064\uffa7\066\uffa7\070" +
    "\uffa7\071\uffa7\073\uffa7\076\uffa7\102\uffa7\103\uffa7\104\uffa7" +
    "\105\uffa7\106\uffa7\001\002\000\104\006\uffa6\007\uffa6\010" +
    "\uffa6\012\uffa6\014\uffa6\015\uffa6\016\uffa6\023\uffa6\025\uffa6" +
    "\026\uffa6\027\uffa6\033\uffa6\035\uffa6\037\uffa6\043\uffa6\046" +
    "\uffa6\051\uffa6\052\uffa6\054\uffa6\057\uffa6\061\uffa6\062\uffa6" +
    "\064\uffa6\066\uffa6\070\uffa6\071\uffa6\073\uffa6\076\uffa6\102" +
    "\uffa6\103\uffa6\104\uffa6\105\uffa6\106\uffa6\001\002\000\042" +
    "\012\076\025\064\037\072\043\073\046\077\051\063\057" +
    "\066\061\100\064\060\066\052\073\070\076\061\102\075" +
    "\103\062\104\044\106\067\001\002\000\004\047\u0104\001" +
    "\002\000\004\056\u0103\001\002\000\104\006\uffa5\007\uffa5" +
    "\010\uffa5\012\uffa5\014\uffa5\015\uffa5\016\uffa5\023\uffa5\025" +
    "\uffa5\026\uffa5\027\uffa5\033\uffa5\035\uffa5\037\uffa5\043\uffa5" +
    "\046\uffa5\051\uffa5\052\uffa5\054\uffa5\057\uffa5\061\uffa5\062" +
    "\uffa5\064\uffa5\066\uffa5\070\uffa5\071\uffa5\073\uffa5\076\uffa5" +
    "\102\uffa5\103\uffa5\104\uffa5\105\uffa5\106\uffa5\001\002\000" +
    "\044\012\076\025\064\037\072\043\073\046\077\051\063" +
    "\056\u0101\057\066\061\100\064\060\066\052\073\070\076" +
    "\061\102\075\103\062\104\044\106\067\001\002\000\104" +
    "\006\uffa4\007\uffa4\010\uffa4\012\uffa4\014\uffa4\015\uffa4\016" +
    "\uffa4\023\uffa4\025\uffa4\026\uffa4\027\uffa4\033\uffa4\035\uffa4" +
    "\037\uffa4\043\uffa4\046\uffa4\051\uffa4\052\uffa4\054\uffa4\057" +
    "\uffa4\061\uffa4\062\uffa4\064\uffa4\066\uffa4\070\uffa4\071\uffa4" +
    "\073\uffa4\076\uffa4\102\uffa4\103\uffa4\104\uffa4\105\uffa4\106" +
    "\uffa4\001\002\000\104\006\uffab\007\uffab\010\uffab\012\uffab" +
    "\014\uffab\015\uffab\016\uffab\023\uffab\025\uffab\026\uffab\027" +
    "\uffab\033\uffab\035\uffab\037\uffab\043\uffab\046\uffab\051\uffab" +
    "\052\uffab\054\uffab\057\uffab\061\uffab\062\uffab\064\uffab\066" +
    "\uffab\070\uffab\071\uffab\073\uffab\076\uffab\102\uffab\103\uffab" +
    "\104\uffab\105\uffab\106\uffab\001\002\000\104\006\uffb7\007" +
    "\uffb7\010\uffb7\012\uffb7\014\uffb7\015\uffb7\016\uffb7\023\uffb7" +
    "\025\uffb7\026\uffb7\027\uffb7\033\uffb7\035\uffb7\037\uffb7\043" +
    "\uffb7\046\uffb7\051\uffb7\052\uffb7\054\uffb7\057\uffb7\061\uffb7" +
    "\062\uffb7\064\uffb7\066\uffb7\070\uffb7\071\uffb7\073\uffb7\076" +
    "\uffb7\102\uffb7\103\uffb7\104\uffb7\105\uffb7\106\uffb7\001\002" +
    "\000\104\006\uffeb\007\334\010\324\012\076\014\uffeb\015" +
    "\314\016\313\023\330\025\064\026\uffeb\027\336\033\uffeb" +
    "\035\321\037\072\043\073\046\077\051\063\052\uffb4\054" +
    "\316\057\066\061\100\062\015\064\060\066\052\070\340" +
    "\071\312\073\070\076\061\102\075\103\062\104\044\105" +
    "\uffeb\106\067\001\002\000\104\006\uffae\007\uffae\010\uffae" +
    "\012\uffae\014\uffae\015\uffae\016\uffae\023\uffae\025\uffae\026" +
    "\uffae\027\uffae\033\uffae\035\uffae\037\uffae\043\uffae\046\uffae" +
    "\051\uffae\052\uffae\054\uffae\057\uffae\061\uffae\062\uffae\064" +
    "\uffae\066\uffae\070\uffae\071\uffae\073\uffae\076\uffae\102\uffae" +
    "\103\uffae\104\uffae\105\uffae\106\uffae\001\002\000\004\034" +
    "\370\001\002\000\104\006\uffac\007\uffac\010\uffac\012\uffac" +
    "\014\uffac\015\uffac\016\uffac\023\uffac\025\uffac\026\uffac\027" +
    "\uffac\033\uffac\035\uffac\037\uffac\043\uffac\046\uffac\051\uffac" +
    "\052\uffac\054\uffac\057\uffac\061\uffac\062\uffac\064\uffac\066" +
    "\uffac\070\uffac\071\uffac\073\uffac\076\uffac\102\uffac\103\uffac" +
    "\104\uffac\105\uffac\106\uffac\001\002\000\004\056\367\001" +
    "\002\000\004\052\366\001\002\000\004\037\362\001\002" +
    "\000\104\006\uffaa\007\uffaa\010\uffaa\012\uffaa\014\uffaa\015" +
    "\uffaa\016\uffaa\023\uffaa\025\uffaa\026\uffaa\027\uffaa\033\uffaa" +
    "\035\uffaa\037\uffaa\043\uffaa\046\uffaa\051\uffaa\052\uffaa\054" +
    "\uffaa\057\uffaa\061\uffaa\062\uffaa\064\uffaa\066\uffaa\070\uffaa" +
    "\071\uffaa\073\uffaa\076\uffaa\102\uffaa\103\uffaa\104\uffaa\105" +
    "\uffaa\106\uffaa\001\002\000\104\006\uffb0\007\uffb0\010\uffb0" +
    "\012\uffb0\014\uffb0\015\uffb0\016\uffb0\023\uffb0\025\uffb0\026" +
    "\uffb0\027\uffb0\033\uffb0\035\uffb0\037\uffb0\043\uffb0\046\uffb0" +
    "\051\uffb0\052\uffb0\054\uffb0\057\uffb0\061\uffb0\062\uffb0\064" +
    "\uffb0\066\uffb0\070\uffb0\071\uffb0\073\uffb0\076\uffb0\102\uffb0" +
    "\103\uffb0\104\uffb0\105\uffb0\106\uffb0\001\002\000\104\006" +
    "\uffb2\007\uffb2\010\uffb2\012\uffb2\014\uffb2\015\uffb2\016\uffb2" +
    "\023\uffb2\025\uffb2\026\uffb2\027\uffb2\033\uffb2\035\uffb2\037" +
    "\uffb2\043\uffb2\046\uffb2\051\uffb2\052\uffb2\054\uffb2\057\uffb2" +
    "\061\uffb2\062\uffb2\064\uffb2\066\uffb2\070\uffb2\071\uffb2\073" +
    "\uffb2\076\uffb2\102\uffb2\103\uffb2\104\uffb2\105\uffb2\106\uffb2" +
    "\001\002\000\004\056\361\001\002\000\104\006\uffaf\007" +
    "\uffaf\010\uffaf\012\uffaf\014\uffaf\015\uffaf\016\uffaf\023\uffaf" +
    "\025\uffaf\026\uffaf\027\uffaf\033\uffaf\035\uffaf\037\uffaf\043" +
    "\uffaf\046\uffaf\051\uffaf\052\uffaf\054\uffaf\057\uffaf\061\uffaf" +
    "\062\uffaf\064\uffaf\066\uffaf\070\uffaf\071\uffaf\073\uffaf\076" +
    "\uffaf\102\uffaf\103\uffaf\104\uffaf\105\uffaf\106\uffaf\001\002" +
    "\000\004\037\347\001\002\000\104\006\uffa8\007\uffa8\010" +
    "\uffa8\012\uffa8\014\uffa8\015\uffa8\016\uffa8\023\uffa8\025\uffa8" +
    "\026\uffa8\027\uffa8\033\uffa8\035\uffa8\037\uffa8\043\uffa8\046" +
    "\uffa8\051\uffa8\052\uffa8\054\uffa8\057\uffa8\061\uffa8\062\uffa8" +
    "\064\uffa8\066\uffa8\070\uffa8\071\uffa8\073\uffa8\076\uffa8\102" +
    "\uffa8\103\uffa8\104\uffa8\105\uffa8\106\uffa8\001\002\000\042" +
    "\012\076\025\064\037\072\043\073\046\077\051\063\057" +
    "\066\061\100\064\060\066\052\073\070\076\061\102\075" +
    "\103\062\104\044\106\067\001\002\000\104\006\uffa9\007" +
    "\uffa9\010\uffa9\012\uffa9\014\uffa9\015\uffa9\016\uffa9\023\uffa9" +
    "\025\uffa9\026\uffa9\027\uffa9\033\uffa9\035\uffa9\037\uffa9\043" +
    "\uffa9\046\uffa9\051\uffa9\052\uffa9\054\uffa9\057\uffa9\061\uffa9" +
    "\062\uffa9\064\uffa9\066\uffa9\070\uffa9\071\uffa9\073\uffa9\076" +
    "\uffa9\102\uffa9\103\uffa9\104\uffa9\105\uffa9\106\uffa9\001\002" +
    "\000\004\035\321\001\002\000\106\006\uff95\007\uff95\010" +
    "\uff95\012\uff95\014\uff95\015\uff95\016\uff95\020\345\023\uff95" +
    "\025\uff95\026\uff95\027\uff95\033\uff95\035\uff95\037\uff95\043" +
    "\uff95\046\uff95\051\uff95\052\uff95\054\uff95\057\uff95\061\uff95" +
    "\062\uff95\064\uff95\066\uff95\070\uff95\071\uff95\073\uff95\076" +
    "\uff95\102\uff95\103\uff95\104\uff95\105\uff95\106\uff95\001\002" +
    "\000\104\006\uff97\007\uff97\010\uff97\012\uff97\014\uff97\015" +
    "\uff97\016\uff97\023\uff97\025\uff97\026\uff97\027\uff97\033\uff97" +
    "\035\uff97\037\uff97\043\uff97\046\uff97\051\uff97\052\uff97\054" +
    "\uff97\057\uff97\061\uff97\062\uff97\064\uff97\066\uff97\070\uff97" +
    "\071\uff97\073\uff97\076\uff97\102\uff97\103\uff97\104\uff97\105" +
    "\uff97\106\uff97\001\002\000\004\035\321\001\002\000\104" +
    "\006\uff96\007\uff96\010\uff96\012\uff96\014\uff96\015\uff96\016" +
    "\uff96\023\uff96\025\uff96\026\uff96\027\uff96\033\uff96\035\uff96" +
    "\037\uff96\043\uff96\046\uff96\051\uff96\052\uff96\054\uff96\057" +
    "\uff96\061\uff96\062\uff96\064\uff96\066\uff96\070\uff96\071\uff96" +
    "\073\uff96\076\uff96\102\uff96\103\uff96\104\uff96\105\uff96\106" +
    "\uff96\001\002\000\012\006\032\026\034\033\035\105\030" +
    "\001\002\000\006\073\351\106\uff9d\001\002\000\004\106" +
    "\uff9e\001\002\000\004\106\353\001\002\000\004\011\354" +
    "\001\002\000\042\012\076\025\064\037\072\043\073\046" +
    "\077\051\063\057\066\061\100\064\060\066\052\073\070" +
    "\076\061\102\075\103\062\104\044\106\067\001\002\000" +
    "\004\055\356\001\002\000\004\035\uff93\001\002\000\004" +
    "\035\321\001\002\000\104\006\uff92\007\uff92\010\uff92\012" +
    "\uff92\014\uff92\015\uff92\016\uff92\023\uff92\025\uff92\026\uff92" +
    "\027\uff92\033\uff92\035\uff92\037\uff92\043\uff92\046\uff92\051" +
    "\uff92\052\uff92\054\uff92\057\uff92\061\uff92\062\uff92\064\uff92" +
    "\066\uff92\070\uff92\071\uff92\073\uff92\076\uff92\102\uff92\103" +
    "\uff92\104\uff92\105\uff92\106\uff92\001\002\000\104\006\uff91" +
    "\007\uff91\010\uff91\012\uff91\014\uff91\015\uff91\016\uff91\023" +
    "\uff91\025\uff91\026\uff91\027\uff91\033\uff91\035\uff91\037\uff91" +
    "\043\uff91\046\uff91\051\uff91\052\uff91\054\uff91\057\uff91\061" +
    "\uff91\062\uff91\064\uff91\066\uff91\070\uff91\071\uff91\073\uff91" +
    "\076\uff91\102\uff91\103\uff91\104\uff91\105\uff91\106\uff91\001" +
    "\002\000\042\012\076\025\064\037\072\043\073\046\077" +
    "\051\063\057\066\061\100\064\060\066\052\073\070\076" +
    "\061\102\075\103\062\104\044\106\067\001\002\000\004" +
    "\055\364\001\002\000\004\056\365\001\002\000\104\006" +
    "\uff8f\007\uff8f\010\uff8f\012\uff8f\014\uff8f\015\uff8f\016\uff8f" +
    "\023\uff8f\025\uff8f\026\uff8f\027\uff8f\033\uff8f\035\uff8f\037" +
    "\uff8f\043\uff8f\046\uff8f\051\uff8f\052\uff8f\054\uff8f\057\uff8f" +
    "\061\uff8f\062\uff8f\064\uff8f\066\uff8f\070\uff8f\071\uff8f\073" +
    "\uff8f\076\uff8f\102\uff8f\103\uff8f\104\uff8f\105\uff8f\106\uff8f" +
    "\001\002\000\012\030\uffdb\052\uffdb\065\uffdb\105\uffdb\001" +
    "\002\000\104\006\uffad\007\uffad\010\uffad\012\uffad\014\uffad" +
    "\015\uffad\016\uffad\023\uffad\025\uffad\026\uffad\027\uffad\033" +
    "\uffad\035\uffad\037\uffad\043\uffad\046\uffad\051\uffad\052\uffad" +
    "\054\uffad\057\uffad\061\uffad\062\uffad\064\uffad\066\uffad\070" +
    "\uffad\071\uffad\073\uffad\076\uffad\102\uffad\103\uffad\104\uffad" +
    "\105\uffad\106\uffad\001\002\000\042\012\076\025\064\037" +
    "\072\043\073\046\077\051\063\057\066\061\100\064\060" +
    "\066\052\073\070\076\061\102\075\103\062\104\044\106" +
    "\067\001\002\000\004\056\372\001\002\000\104\006\uff8c" +
    "\007\uff8c\010\uff8c\012\uff8c\014\uff8c\015\uff8c\016\uff8c\023" +
    "\uff8c\025\uff8c\026\uff8c\027\uff8c\033\uff8c\035\uff8c\037\uff8c" +
    "\043\uff8c\046\uff8c\051\uff8c\052\uff8c\054\uff8c\057\uff8c\061" +
    "\uff8c\062\uff8c\064\uff8c\066\uff8c\070\uff8c\071\uff8c\073\uff8c" +
    "\076\uff8c\102\uff8c\103\uff8c\104\uff8c\105\uff8c\106\uff8c\001" +
    "\002\000\104\006\uffb1\007\uffb1\010\uffb1\012\uffb1\014\uffb1" +
    "\015\uffb1\016\uffb1\023\uffb1\025\uffb1\026\uffb1\027\uffb1\033" +
    "\uffb1\035\uffb1\037\uffb1\043\uffb1\046\uffb1\051\uffb1\052\uffb1" +
    "\054\uffb1\057\uffb1\061\uffb1\062\uffb1\064\uffb1\066\uffb1\070" +
    "\uffb1\071\uffb1\073\uffb1\076\uffb1\102\uffb1\103\uffb1\104\uffb1" +
    "\105\uffb1\106\uffb1\001\002\000\104\006\uffeb\007\334\010" +
    "\324\012\076\014\uffeb\015\314\016\313\023\330\025\064" +
    "\026\uffeb\027\336\033\uffeb\035\321\037\072\043\073\046" +
    "\077\051\063\052\uffb3\054\316\057\066\061\100\062\015" +
    "\064\060\066\052\070\340\071\312\073\070\076\061\102" +
    "\075\103\062\104\044\105\uffeb\106\067\001\002\000\004" +
    "\052\uffb6\001\002\000\004\052\377\001\002\000\106\006" +
    "\uffb5\007\uffb5\010\uffb5\012\uffb5\014\uffb5\015\uffb5\016\uffb5" +
    "\020\uffb5\023\uffb5\025\uffb5\026\uffb5\027\uffb5\033\uffb5\035" +
    "\uffb5\037\uffb5\043\uffb5\046\uffb5\051\uffb5\052\uffb5\054\uffb5" +
    "\057\uffb5\061\uffb5\062\uffb5\064\uffb5\066\uffb5\070\uffb5\071" +
    "\uffb5\073\uffb5\076\uffb5\102\uffb5\103\uffb5\104\uffb5\105\uffb5" +
    "\106\uffb5\001\002\000\004\056\u0102\001\002\000\104\006" +
    "\uff8e\007\uff8e\010\uff8e\012\uff8e\014\uff8e\015\uff8e\016\uff8e" +
    "\023\uff8e\025\uff8e\026\uff8e\027\uff8e\033\uff8e\035\uff8e\037" +
    "\uff8e\043\uff8e\046\uff8e\051\uff8e\052\uff8e\054\uff8e\057\uff8e" +
    "\061\uff8e\062\uff8e\064\uff8e\066\uff8e\070\uff8e\071\uff8e\073" +
    "\uff8e\076\uff8e\102\uff8e\103\uff8e\104\uff8e\105\uff8e\106\uff8e" +
    "\001\002\000\104\006\uff8d\007\uff8d\010\uff8d\012\uff8d\014" +
    "\uff8d\015\uff8d\016\uff8d\023\uff8d\025\uff8d\026\uff8d\027\uff8d" +
    "\033\uff8d\035\uff8d\037\uff8d\043\uff8d\046\uff8d\051\uff8d\052" +
    "\uff8d\054\uff8d\057\uff8d\061\uff8d\062\uff8d\064\uff8d\066\uff8d" +
    "\070\uff8d\071\uff8d\073\uff8d\076\uff8d\102\uff8d\103\uff8d\104" +
    "\uff8d\105\uff8d\106\uff8d\001\002\000\104\006\uff90\007\uff90" +
    "\010\uff90\012\uff90\014\uff90\015\uff90\016\uff90\023\uff90\025" +
    "\uff90\026\uff90\027\uff90\033\uff90\035\uff90\037\uff90\043\uff90" +
    "\046\uff90\051\uff90\052\uff90\054\uff90\057\uff90\061\uff90\062" +
    "\uff90\064\uff90\066\uff90\070\uff90\071\uff90\073\uff90\076\uff90" +
    "\102\uff90\103\uff90\104\uff90\105\uff90\106\uff90\001\002\000" +
    "\044\012\076\021\u0108\025\064\037\072\043\073\046\077" +
    "\051\063\057\066\061\100\064\060\066\052\073\070\076" +
    "\061\102\075\103\062\104\044\106\067\001\002\000\006" +
    "\047\uff88\056\uff88\001\002\000\006\047\uff8a\056\uff8a\001" +
    "\002\000\006\047\u0109\056\u010a\001\002\000\006\047\uff87" +
    "\056\uff87\001\002\000\044\012\076\021\u0108\025\064\037" +
    "\072\043\073\046\077\051\063\057\066\061\100\064\060" +
    "\066\052\073\070\076\061\102\075\103\062\104\044\106" +
    "\067\001\002\000\104\006\uff8b\007\uff8b\010\uff8b\012\uff8b" +
    "\014\uff8b\015\uff8b\016\uff8b\023\uff8b\025\uff8b\026\uff8b\027" +
    "\uff8b\033\uff8b\035\uff8b\037\uff8b\043\uff8b\046\uff8b\051\uff8b" +
    "\052\uff8b\054\uff8b\057\uff8b\061\uff8b\062\uff8b\064\uff8b\066" +
    "\uff8b\070\uff8b\071\uff8b\073\uff8b\076\uff8b\102\uff8b\103\uff8b" +
    "\104\uff8b\105\uff8b\106\uff8b\001\002\000\006\047\uff89\056" +
    "\uff89\001\002\000\004\035\321\001\002\000\104\006\uff94" +
    "\007\uff94\010\uff94\012\uff94\014\uff94\015\uff94\016\uff94\023" +
    "\uff94\025\uff94\026\uff94\027\uff94\033\uff94\035\uff94\037\uff94" +
    "\043\uff94\046\uff94\051\uff94\052\uff94\054\uff94\057\uff94\061" +
    "\uff94\062\uff94\064\uff94\066\uff94\070\uff94\071\uff94\073\uff94" +
    "\076\uff94\102\uff94\103\uff94\104\uff94\105\uff94\106\uff94\001" +
    "\002\000\012\006\032\026\034\033\035\105\030\001\002" +
    "\000\006\013\uffa0\055\uffa0\001\002\000\004\106\u0111\001" +
    "\002\000\010\013\uffbb\036\126\055\uffbb\001\002\000\006" +
    "\013\uff9f\055\uff9f\001\002\000\004\037\uffda\001\002\000" +
    "\004\037\u0115\001\002\000\004\055\u0116\001\002\000\004" +
    "\035\u0117\001\002\000\104\006\uffeb\007\334\010\324\012" +
    "\076\014\uffeb\015\314\016\313\023\330\025\064\026\uffeb" +
    "\027\336\033\uffeb\035\321\037\072\043\073\046\077\051" +
    "\063\052\uffb3\054\316\057\066\061\100\062\015\064\060" +
    "\066\052\070\340\071\312\073\070\076\061\102\075\103" +
    "\062\104\044\105\uffeb\106\067\001\002\000\004\052\u0119" +
    "\001\002\000\012\030\uffd9\052\uffd9\065\uffd9\105\uffd9\001" +
    "\002\000\014\006\032\026\034\033\035\067\u011d\105\030" +
    "\001\002\000\006\073\uffc3\106\uffc3\001\002\000\006\073" +
    "\351\106\uff9d\001\002\000\006\073\uffc2\106\uffc2\001\002" +
    "\000\004\106\u011f\001\002\000\004\037\uffd3\001\002\000" +
    "\004\037\u0121\001\002\000\014\006\032\026\034\033\035" +
    "\055\uffa2\105\030\001\002\000\004\055\u0123\001\002\000" +
    "\004\035\uffd2\001\002\000\004\035\u0125\001\002\000\104" +
    "\006\uffeb\007\334\010\324\012\076\014\uffeb\015\314\016" +
    "\313\023\330\025\064\026\uffeb\027\336\033\uffeb\035\321" +
    "\037\072\043\073\046\077\051\063\052\uffb3\054\316\057" +
    "\066\061\100\062\015\064\060\066\052\070\340\071\312" +
    "\073\070\076\061\102\075\103\062\104\044\105\uffeb\106" +
    "\067\001\002\000\004\052\uffd1\001\002\000\004\052\u0128" +
    "\001\002\000\030\002\uffd0\006\uffd0\014\uffd0\024\uffd0\026" +
    "\uffd0\030\uffd0\033\uffd0\052\uffd0\062\uffd0\063\uffd0\105\uffd0" +
    "\001\002\000\004\011\u012f\001\002\000\004\106\u012b\001" +
    "\002\000\006\036\126\056\uffbb\001\002\000\004\056\ufff4" +
    "\001\002\000\004\056\u012e\001\002\000\026\002\ufff3\006" +
    "\ufff3\014\ufff3\024\ufff3\026\ufff3\030\ufff3\033\ufff3\062\ufff3" +
    "\063\ufff3\105\ufff3\001\002\000\014\006\032\026\034\033" +
    "\035\067\u011d\105\030\001\002\000\004\106\u0131\001\002" +
    "\000\004\037\uffcf\001\002\000\004\037\u0133\001\002\000" +
    "\014\006\032\026\034\033\035\055\uffa2\105\030\001\002" +
    "\000\004\055\u0135\001\002\000\004\056\uffce\001\002\000" +
    "\004\056\u0137\001\002\000\026\002\uffcd\006\uffcd\014\uffcd" +
    "\024\uffcd\026\uffcd\030\uffcd\033\uffcd\062\uffcd\063\uffcd\105" +
    "\uffcd\001\002\000\004\002\uffff\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\u0136\000\006\003\003\121\004\001\001\000\002\001" +
    "\001\000\026\004\021\005\017\006\015\007\016\010\005" +
    "\011\020\012\013\013\022\014\007\056\012\001\001\000" +
    "\002\001\001\000\006\105\026\106\u0129\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\012\105" +
    "\026\106\024\107\030\111\025\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\022\006\023\007\016\010\005\011\020\012\013\013\022" +
    "\014\007\056\012\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\010\055\113\057\232\060\231\001" +
    "\001\000\002\001\001\000\006\055\113\057\112\001\001" +
    "\000\002\001\001\000\004\105\035\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\042\052\073\063\070\066\064\067\056\070\055\071" +
    "\054\072\053\073\050\074\045\075\044\076\042\077\040" +
    "\100\041\101\047\102\046\103\052\001\001\000\004\062" +
    "\172\001\001\000\002\001\001\000\004\061\165\001\001" +
    "\000\002\001\001\000\004\054\160\001\001\000\004\053" +
    "\151\001\001\000\002\001\001\000\004\063\200\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\125\174\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\014\052\073\063" +
    "\070\100\135\101\047\102\046\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\014\052\073\063\070" +
    "\100\116\101\047\102\046\001\001\000\014\052\073\063" +
    "\070\100\115\101\047\102\046\001\001\000\050\052\073" +
    "\063\070\066\105\067\056\070\055\071\054\072\053\073" +
    "\050\074\045\075\044\076\042\077\040\100\041\101\047" +
    "\102\046\105\026\106\024\107\103\111\104\001\001\000" +
    "\002\001\001\000\014\052\073\063\070\100\102\101\047" +
    "\102\046\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\014\052\073\063\070\100\100\101\047" +
    "\102\046\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\006\055\113\057\112\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\014\052" +
    "\073\063\070\100\110\101\047\102\046\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\055\114\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\026\052\073\063\070\100\120\101\047\102" +
    "\046\105\026\106\024\107\121\110\122\111\123\001\001" +
    "\000\002\001\001\000\006\055\113\057\112\001\001\000" +
    "\010\065\127\113\126\114\124\001\001\000\002\001\001" +
    "\000\004\065\133\001\001\000\042\052\073\063\070\066" +
    "\064\067\056\070\055\071\054\072\053\073\050\074\045" +
    "\075\044\076\042\077\040\100\041\101\047\102\046\103" +
    "\131\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\034\052\073" +
    "\063\070\070\140\071\054\072\053\073\050\074\045\075" +
    "\044\076\042\077\040\100\137\101\047\102\046\001\001" +
    "\000\002\001\001\000\002\001\001\000\032\052\073\063" +
    "\070\071\142\072\053\073\050\074\045\075\044\076\042" +
    "\077\040\100\137\101\047\102\046\001\001\000\002\001" +
    "\001\000\030\052\073\063\070\072\144\073\050\074\045" +
    "\075\044\076\042\077\040\100\137\101\047\102\046\001" +
    "\001\000\002\001\001\000\026\052\073\063\070\073\146" +
    "\074\045\075\044\076\042\077\040\100\137\101\047\102" +
    "\046\001\001\000\002\001\001\000\024\052\073\063\070" +
    "\074\150\075\044\076\042\077\040\100\137\101\047\102" +
    "\046\001\001\000\004\053\151\001\001\000\022\052\073" +
    "\063\070\075\154\076\042\077\040\100\137\101\047\102" +
    "\046\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\054\160\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\020\052\073\063\070\076\162\077\040" +
    "\100\137\101\047\102\046\001\001\000\002\001\001\000" +
    "\004\061\165\001\001\000\002\001\001\000\002\001\001" +
    "\000\016\052\073\063\070\077\166\100\137\101\047\102" +
    "\046\001\001\000\004\062\172\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\014\052\073\063" +
    "\070\100\173\101\047\102\046\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\040\052\073\063" +
    "\070\066\213\067\056\070\055\071\054\072\053\073\050" +
    "\074\045\075\044\076\042\077\040\100\041\101\047\102" +
    "\046\001\001\000\044\034\207\051\206\052\073\063\070" +
    "\066\205\067\056\070\055\071\054\072\053\073\050\074" +
    "\045\075\044\076\042\077\040\100\041\101\047\102\046" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\040\052\073\063\070\066\212\067\056\070\055\071\054" +
    "\072\053\073\050\074\045\075\044\076\042\077\040\100" +
    "\041\101\047\102\046\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\040\052\073\063\070\066" +
    "\216\067\056\070\055\071\054\072\053\073\050\074\045" +
    "\075\044\076\042\077\040\100\041\101\047\102\046\001" +
    "\001\000\002\001\001\000\010\065\127\113\220\114\124" +
    "\001\001\000\006\115\223\116\222\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\124\224\001\001\000\002" +
    "\001\001\000\002\001\001\000\044\034\227\051\206\052" +
    "\073\063\070\066\205\067\056\070\055\071\054\072\053" +
    "\073\050\074\045\075\044\076\042\077\040\100\041\101" +
    "\047\102\046\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\055\114\001\001\000\010\065" +
    "\127\113\234\114\124\001\001\000\004\104\235\001\001" +
    "\000\004\123\240\001\001\000\040\052\073\063\070\066" +
    "\237\067\056\070\055\071\054\072\053\073\050\074\045" +
    "\075\044\076\042\077\040\100\041\101\047\102\046\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\126\244\001\001\000\016\020" +
    "\245\021\247\105\026\106\024\107\103\111\246\001\001" +
    "\000\026\015\261\016\253\021\255\022\262\023\257\024" +
    "\260\105\026\106\024\107\103\111\246\001\001\000\002" +
    "\001\001\000\002\001\001\000\010\065\127\113\251\114" +
    "\124\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\131" +
    "\276\001\001\000\010\015\261\016\253\024\275\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\127\263\001" +
    "\001\000\012\007\266\025\267\026\265\027\264\001\001" +
    "\000\002\001\001\000\006\007\266\027\273\001\001\000" +
    "\002\001\001\000\004\130\270\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\131\276\001\001\000\002\001\001\000\002\001\001" +
    "\000\022\064\302\105\026\106\024\107\121\110\300\111" +
    "\123\117\303\120\301\001\001\000\004\017\u010f\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\132\305\001\001\000\002\001\001\000\100\012\331" +
    "\013\334\030\326\031\321\032\332\033\322\035\324\037" +
    "\330\040\317\041\340\042\336\043\307\044\310\045\314" +
    "\046\316\052\073\056\012\063\070\066\325\067\056\070" +
    "\055\071\054\072\053\073\050\074\045\075\044\076\042" +
    "\077\040\100\041\101\047\102\046\001\001\000\002\001" +
    "\001\000\002\001\001\000\040\052\073\063\070\066\u010b" +
    "\067\056\070\055\071\054\072\053\073\050\074\045\075" +
    "\044\076\042\077\040\100\041\101\047\102\046\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\040\052\073\063\070\066\377\067\056\070\055\071\054" +
    "\072\053\073\050\074\045\075\044\076\042\077\040\100" +
    "\041\101\047\102\046\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\141\373\001\001\000\074\012\331\013" +
    "\334\032\372\033\322\035\324\037\330\040\317\041\340" +
    "\042\336\043\307\044\310\045\314\046\316\052\073\056" +
    "\012\063\070\066\325\067\056\070\055\071\054\072\053" +
    "\073\050\074\045\075\044\076\042\077\040\100\041\101" +
    "\047\102\046\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\040\052\073\063\070\066\341" +
    "\067\056\070\055\071\054\072\053\073\050\074\045\075" +
    "\044\076\042\077\040\100\041\101\047\102\046\001\001" +
    "\000\002\001\001\000\004\033\342\001\001\000\004\036" +
    "\343\001\001\000\002\001\001\000\004\033\345\001\001" +
    "\000\002\001\001\000\014\105\026\106\024\107\121\110" +
    "\347\111\123\001\001\000\004\017\351\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\040\052" +
    "\073\063\070\066\354\067\056\070\055\071\054\072\053" +
    "\073\050\074\045\075\044\076\042\077\040\100\041\101" +
    "\047\102\046\001\001\000\002\001\001\000\004\143\356" +
    "\001\001\000\004\033\357\001\001\000\002\001\001\000" +
    "\002\001\001\000\040\052\073\063\070\066\362\067\056" +
    "\070\055\071\054\072\053\073\050\074\045\075\044\076" +
    "\042\077\040\100\041\101\047\102\046\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\014\052\073\063\070\100\370" +
    "\101\047\102\046\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\100\012\331\013\334\030\374" +
    "\031\321\032\332\033\322\035\324\037\330\040\317\041" +
    "\340\042\336\043\307\044\310\045\314\046\316\052\073" +
    "\056\012\063\070\066\325\067\056\070\055\071\054\072" +
    "\053\073\050\074\045\075\044\076\042\077\040\100\041" +
    "\101\047\102\046\001\001\000\004\142\375\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\044\047" +
    "\u0106\050\u0105\052\073\063\070\066\u0104\067\056\070\055" +
    "\071\054\072\053\073\050\074\045\075\044\076\042\077" +
    "\040\100\041\101\047\102\046\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\042\050\u010a\052\073\063\070\066\u0104\067\056\070\055" +
    "\071\054\072\053\073\050\074\045\075\044\076\042\077" +
    "\040\100\041\101\047\102\046\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\033\u010c\001\001\000\002\001" +
    "\001\000\016\064\u010e\105\026\106\024\107\121\110\300" +
    "\111\123\001\001\000\002\001\001\000\002\001\001\000" +
    "\010\065\127\113\u0111\114\124\001\001\000\002\001\001" +
    "\000\004\133\u0113\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\100\012\331\013\334\030\u0117" +
    "\031\321\032\332\033\322\035\324\037\330\040\317\041" +
    "\340\042\336\043\307\044\310\045\314\046\316\052\073" +
    "\056\012\063\070\066\325\067\056\070\055\071\054\072" +
    "\053\073\050\074\045\075\044\076\042\077\040\100\041" +
    "\101\047\102\046\001\001\000\002\001\001\000\002\001" +
    "\001\000\016\105\026\106\024\107\121\110\u011a\111\123" +
    "\112\u011b\001\001\000\002\001\001\000\004\017\u011d\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\134\u011f" +
    "\001\001\000\002\001\001\000\022\064\302\105\026\106" +
    "\024\107\121\110\300\111\123\117\u0121\120\301\001\001" +
    "\000\002\001\001\000\004\135\u0123\001\001\000\002\001" +
    "\001\000\100\012\331\013\334\030\u0125\031\321\032\332" +
    "\033\322\035\324\037\330\040\317\041\340\042\336\043" +
    "\307\044\310\045\314\046\316\052\073\056\012\063\070" +
    "\066\325\067\056\070\055\071\054\072\053\073\050\074" +
    "\045\075\044\076\042\077\040\100\041\101\047\102\046" +
    "\001\001\000\004\136\u0126\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\010" +
    "\065\127\113\u012b\114\124\001\001\000\004\122\u012c\001" +
    "\001\000\002\001\001\000\002\001\001\000\016\105\026" +
    "\106\024\107\121\110\u011a\111\123\112\u012f\001\001\000" +
    "\002\001\001\000\004\137\u0131\001\001\000\002\001\001" +
    "\000\022\064\302\105\026\106\024\107\121\110\300\111" +
    "\123\117\u0133\120\301\001\001\000\002\001\001\000\004" +
    "\140\u0135\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$parser$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$parser$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$parser$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 2;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}


  /** Scan to get the next Symbol. */
  public java_cup.runtime.Symbol scan()
    throws java.lang.Exception
    {
 return new Symbol (sym.EOF); 
    }



}

/** Cup generated class to encapsulate user supplied action code.*/
class CUP$parser$actions {
  private final parser parser;

  /** Constructor */
  CUP$parser$actions(parser parser) {
    this.parser = parser;
  }

  /** Method with the actual generated action code. */
  public final java_cup.runtime.Symbol CUP$parser$do_action(
    int                        CUP$parser$act_num,
    java_cup.runtime.lr_parser CUP$parser$parser,
    java.util.Stack            CUP$parser$stack,
    int                        CUP$parser$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$parser$result;

      /* select the action based on the action number */
      switch (CUP$parser$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 185: // Designator3 ::= T_ID 
            {
              STO RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		String _1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
                        RESULT = ((MyParser) parser).DoDesignator3_ID (_1);
                    
              CUP$parser$result = new java_cup.runtime.Symbol(64/*Designator3*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 184: // Designator3 ::= T_COLONCOLON T_ID 
            {
              STO RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		String _1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
                        RESULT = ((MyParser) parser).DoDesignator3_ID (_1);
                    
              CUP$parser$result = new java_cup.runtime.Symbol(64/*Designator3*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 183: // Designator3 ::= T_THIS 
            {
              STO RESULT = null;
		
                        RESULT = new ExprSTO ("this");              // fix me!
                    
              CUP$parser$result = new java_cup.runtime.Symbol(64/*Designator3*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 182: // Designator3 ::= T_NULLPTR 
            {
              STO RESULT = null;
		
                        RESULT = new ExprSTO ("nullptr", null);     // fix me!
                    
              CUP$parser$result = new java_cup.runtime.Symbol(64/*Designator3*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 181: // Designator3 ::= T_FALSE 
            {
              STO RESULT = null;
		
                        RESULT = new ConstSTO ("false", null, 0);   // fix me!
                    
              CUP$parser$result = new java_cup.runtime.Symbol(64/*Designator3*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 180: // Designator3 ::= T_TRUE 
            {
              STO RESULT = null;
		
                        RESULT = new ConstSTO ("true", null, 1);    // fix me!
                    
              CUP$parser$result = new java_cup.runtime.Symbol(64/*Designator3*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 179: // Designator3 ::= T_STR_LITERAL 
            {
              STO RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		String _1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
                        RESULT = new ConstSTO (_1);
                    
              CUP$parser$result = new java_cup.runtime.Symbol(64/*Designator3*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 178: // Designator3 ::= T_FLOAT_LITERAL 
            {
              STO RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		String _1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
                        RESULT = new ConstSTO (_1, null, 0.00);  // fix me!
                    
              CUP$parser$result = new java_cup.runtime.Symbol(64/*Designator3*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 177: // Designator3 ::= T_INT_LITERAL 
            {
              STO RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		String _1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
                        RESULT = new ConstSTO (_1, null, 0);    // fix me!
                    
              CUP$parser$result = new java_cup.runtime.Symbol(64/*Designator3*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 176: // Designator3 ::= T_LPAREN Expr T_RPAREN 
            {
              STO RESULT = null;
		int _2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int _2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		STO _2 = (STO)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		
                        RESULT = _2;
                    
              CUP$parser$result = new java_cup.runtime.Symbol(64/*Designator3*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 175: // Designator2 ::= Designator3 
            {
              STO RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		STO _1 = (STO)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
                        RESULT = _1;
                    
              CUP$parser$result = new java_cup.runtime.Symbol(63/*Designator2*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 174: // Designator2 ::= Designator2 T_LPAREN OptExprList T_RPAREN 
            {
              STO RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		STO _1 = (STO)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		
                        ((MyParser) parser).DoFuncCall (_1);
                        RESULT = _1;
                    
              CUP$parser$result = new java_cup.runtime.Symbol(63/*Designator2*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 173: // Designator2 ::= Designator2 IncDecOp 
            {
              STO RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		STO _1 = (STO)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		
                        RESULT = _1;
                    
              CUP$parser$result = new java_cup.runtime.Symbol(63/*Designator2*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 172: // Designator2 ::= Designator2 T_ARROW T_ID 
            {
              STO RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		STO _1 = (STO)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		
                        RESULT = _1;
                    
              CUP$parser$result = new java_cup.runtime.Symbol(63/*Designator2*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 171: // Designator2 ::= Designator2 T_LBRACKET Expr T_RBRACKET 
            {
              STO RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		STO _1 = (STO)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		
                        RESULT = ((MyParser) parser).DoDesignator2_Array (_1);
                    
              CUP$parser$result = new java_cup.runtime.Symbol(63/*Designator2*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 170: // Designator2 ::= Designator2 T_DOT T_ID 
            {
              STO RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		STO _1 = (STO)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int _3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		String _3 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
                        RESULT = ((MyParser) parser).DoDesignator2_Dot (_1, _3);
                    
              CUP$parser$result = new java_cup.runtime.Symbol(63/*Designator2*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 169: // Designator ::= Designator2 
            {
              STO RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		STO _1 = (STO)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
                        RESULT = _1;
                    
              CUP$parser$result = new java_cup.runtime.Symbol(62/*Designator*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 168: // Designator ::= IncDecOp Designator 
            {
              STO RESULT = null;
		int _2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		STO _2 = (STO)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
                        RESULT = _2;
                    
              CUP$parser$result = new java_cup.runtime.Symbol(62/*Designator*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 167: // Designator ::= T_LPAREN DecoratedType T_RPAREN Designator 
            {
              STO RESULT = null;
		int _2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		STO _2 = (STO)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
                        RESULT = _2;
                    
              CUP$parser$result = new java_cup.runtime.Symbol(62/*Designator*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 166: // Designator ::= T_SIZEOF T_LPAREN Type OptArrayList T_RPAREN 
            {
              STO RESULT = null;
		int _2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int _2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Type _2 = (Type)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		
                        RESULT = new ConstSTO("sizeof type - fix me", null, 0);
                    
              CUP$parser$result = new java_cup.runtime.Symbol(62/*Designator*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 165: // Designator ::= T_SIZEOF T_LPAREN Designator T_RPAREN 
            {
              STO RESULT = null;
		int _2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int _2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		STO _2 = (STO)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		
                        RESULT = new ConstSTO("sizeof variable - fix me", null, 0);
                    
              CUP$parser$result = new java_cup.runtime.Symbol(62/*Designator*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 164: // Designator ::= T_NOT Designator 
            {
              STO RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		STO _1 = (STO)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
                        RESULT = _1;
                    
              CUP$parser$result = new java_cup.runtime.Symbol(62/*Designator*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 163: // Designator ::= UnarySign Designator 
            {
              STO RESULT = null;
		int _2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		STO _2 = (STO)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
                        RESULT = _2;
                    
              CUP$parser$result = new java_cup.runtime.Symbol(62/*Designator*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 162: // Designator ::= T_AMPERSAND Designator 
            {
              STO RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		STO _1 = (STO)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
                        RESULT = _1;
                    
              CUP$parser$result = new java_cup.runtime.Symbol(62/*Designator*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 161: // Designator ::= T_STAR Designator 
            {
              STO RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		STO _1 = (STO)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
                        RESULT = _1;
                    
              CUP$parser$result = new java_cup.runtime.Symbol(62/*Designator*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 160: // IncDecOp ::= T_MINUSMINUS 
            {
              String RESULT = null;
		
                        RESULT = "--";
                    
              CUP$parser$result = new java_cup.runtime.Symbol(49/*IncDecOp*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 159: // IncDecOp ::= T_PLUSPLUS 
            {
              String RESULT = null;
		
                        RESULT = "++";
                    
              CUP$parser$result = new java_cup.runtime.Symbol(49/*IncDecOp*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 158: // MulOp ::= T_MOD 
            {
              String RESULT = null;
		
                        RESULT = "%";
                    
              CUP$parser$result = new java_cup.runtime.Symbol(48/*MulOp*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 157: // MulOp ::= T_SLASH 
            {
              String RESULT = null;
		
                        RESULT = "/";
                    
              CUP$parser$result = new java_cup.runtime.Symbol(48/*MulOp*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 156: // MulOp ::= T_STAR 
            {
              String RESULT = null;
		
                        RESULT = "*";
                    
              CUP$parser$result = new java_cup.runtime.Symbol(48/*MulOp*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 155: // AddOp ::= T_MINUS 
            {
              String RESULT = null;
		
                        RESULT = "-";
                    
              CUP$parser$result = new java_cup.runtime.Symbol(47/*AddOp*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 154: // AddOp ::= T_PLUS 
            {
              String RESULT = null;
		
                        RESULT = "+";
                    
              CUP$parser$result = new java_cup.runtime.Symbol(47/*AddOp*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 153: // Relation ::= T_GTE 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(42/*Relation*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 152: // Relation ::= T_LTE 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(42/*Relation*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 151: // Relation ::= T_GT 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(42/*Relation*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 150: // Relation ::= T_LT 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(42/*Relation*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 149: // Equality ::= T_NEQ 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(41/*Equality*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 148: // Equality ::= T_EQU 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(41/*Equality*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 147: // Expr8 ::= Designator 
            {
              STO RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		STO _1 = (STO)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
                        RESULT = _1;
                    
              CUP$parser$result = new java_cup.runtime.Symbol(61/*Expr8*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 146: // Expr8 ::= Expr8 MulOp Designator 
            {
              STO RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		STO _1 = (STO)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int _2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int _2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String _2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int _3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		STO _3 = (STO)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
                        RESULT = _1;
                    
              CUP$parser$result = new java_cup.runtime.Symbol(61/*Expr8*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 145: // Expr7 ::= Expr8 
            {
              STO RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		STO _1 = (STO)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
                        RESULT = _1;
                    
              CUP$parser$result = new java_cup.runtime.Symbol(60/*Expr7*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 144: // Expr7 ::= Expr7 AddOp Expr8 
            {
              STO RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		STO _1 = (STO)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int _2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int _2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String _2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int _3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		STO _3 = (STO)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
                        RESULT = _1;
                    
              CUP$parser$result = new java_cup.runtime.Symbol(60/*Expr7*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 143: // Expr6 ::= Expr7 
            {
              STO RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		STO _1 = (STO)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
                        RESULT = _1;
                    
              CUP$parser$result = new java_cup.runtime.Symbol(59/*Expr6*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 142: // Expr6 ::= Expr6 Relation Expr7 
            {
              STO RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		STO _1 = (STO)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		
                        RESULT = _1;
                    
              CUP$parser$result = new java_cup.runtime.Symbol(59/*Expr6*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 141: // Expr5 ::= Expr6 
            {
              STO RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		STO _1 = (STO)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
                        RESULT = _1;
                    
              CUP$parser$result = new java_cup.runtime.Symbol(58/*Expr5*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 140: // Expr5 ::= Expr5 Equality Expr6 
            {
              STO RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		STO _1 = (STO)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		
                        RESULT = _1;
                    
              CUP$parser$result = new java_cup.runtime.Symbol(58/*Expr5*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 139: // Expr4 ::= Expr5 
            {
              STO RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		STO _1 = (STO)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
                        RESULT = _1;
                    
              CUP$parser$result = new java_cup.runtime.Symbol(57/*Expr4*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 138: // Expr4 ::= Expr4 T_AMPERSAND Expr5 
            {
              STO RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		STO _1 = (STO)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		
                        RESULT = _1;
                    
              CUP$parser$result = new java_cup.runtime.Symbol(57/*Expr4*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 137: // Expr3 ::= Expr4 
            {
              STO RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		STO _1 = (STO)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
                        RESULT = _1;
                    
              CUP$parser$result = new java_cup.runtime.Symbol(56/*Expr3*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 136: // Expr3 ::= Expr3 T_CARET Expr4 
            {
              STO RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		STO _1 = (STO)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		
                        RESULT = _1;
                    
              CUP$parser$result = new java_cup.runtime.Symbol(56/*Expr3*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 135: // Expr2 ::= Expr3 
            {
              STO RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		STO _1 = (STO)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
                        RESULT = _1;
                    
              CUP$parser$result = new java_cup.runtime.Symbol(55/*Expr2*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 134: // Expr2 ::= Expr2 T_BAR Expr3 
            {
              STO RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		STO _1 = (STO)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		
                        RESULT = _1;
                    
              CUP$parser$result = new java_cup.runtime.Symbol(55/*Expr2*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 133: // Expr1 ::= Expr2 
            {
              STO RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		STO _1 = (STO)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
                        RESULT = _1;
                    
              CUP$parser$result = new java_cup.runtime.Symbol(54/*Expr1*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 132: // Expr1 ::= Expr1 T_AND Expr2 
            {
              STO RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		STO _1 = (STO)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		
                        RESULT = _1;
                    
              CUP$parser$result = new java_cup.runtime.Symbol(54/*Expr1*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 131: // Expr0 ::= Expr1 
            {
              STO RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		STO _1 = (STO)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
                        RESULT = _1;
                    
              CUP$parser$result = new java_cup.runtime.Symbol(53/*Expr0*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 130: // Expr0 ::= Expr0 T_OR Expr1 
            {
              STO RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		STO _1 = (STO)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		
                        RESULT = _1;
                    
              CUP$parser$result = new java_cup.runtime.Symbol(53/*Expr0*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 129: // Expr ::= Expr0 
            {
              STO RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		STO _1 = (STO)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
                        RESULT = _1;
                    
              CUP$parser$result = new java_cup.runtime.Symbol(52/*Expr*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 128: // Expr ::= Designator T_ASSIGN Expr 
            {
              STO RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		STO _1 = (STO)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		
                        RESULT = ((MyParser) parser).DoAssignExpr (_1);
                    
              CUP$parser$result = new java_cup.runtime.Symbol(52/*Expr*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 127: // ExprList ::= ExprList T_COMMA Expr 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(39/*ExprList*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 126: // ExprList ::= Expr 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(39/*ExprList*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 125: // OptExprList ::= 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(26/*OptExprList*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 124: // OptExprList ::= ExprList 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(26/*OptExprList*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 123: // ConstExpr ::= Expr 
            {
              STO RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(65/*ConstExpr*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 122: // WritePair ::= T_ENDL 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(38/*WritePair*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 121: // WritePair ::= Expr 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(38/*WritePair*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 120: // WritePairList ::= WritePairList T_OSTREAM WritePair 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(37/*WritePairList*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 119: // WritePairList ::= WritePair 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(37/*WritePairList*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 118: // WriteStmt ::= T_COUT T_OSTREAM WritePairList T_SEMI 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(36/*WriteStmt*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 117: // ReadStmt ::= T_CIN T_ISTREAM Designator T_SEMI 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(35/*ReadStmt*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 116: // ReturnStmt ::= T_RETURN Expr T_SEMI 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(34/*ReturnStmt*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 115: // ReturnStmt ::= T_RETURN T_SEMI 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(34/*ReturnStmt*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 114: // ExitStmt ::= T_EXIT T_LPAREN Expr T_RPAREN T_SEMI 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(33/*ExitStmt*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 113: // ContinueStmt ::= T_CONTINUE T_SEMI 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(32/*ContinueStmt*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 112: // BreakStmt ::= T_BREAK T_SEMI 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(31/*BreakStmt*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 111: // ForeachStmt ::= T_FOREACH T_LPAREN Type OptRef T_ID T_COLON Expr T_RPAREN NT$18 CodeBlock 
            {
              Object RESULT = null;
              // propagate RESULT from NT$18
              if ( ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value != null )
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int _3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left;
		int _3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).right;
		String _3 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		
                        ((MyParser) parser).DoBlockClose();
                    
              CUP$parser$result = new java_cup.runtime.Symbol(29/*ForeachStmt*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-9)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 110: // NT$18 ::= 
            {
              Object RESULT = null;
		int _3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int _3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		String _3 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;

                        ((MyParser) parser).DoBlockOpen();
                        ((MyParser) parser).DoVarDecl (_3);
                    
              CUP$parser$result = new java_cup.runtime.Symbol(97/*NT$18*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 109: // WhileStmt ::= T_WHILE Expr CodeBlock 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(30/*WhileStmt*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 108: // OptElse ::= 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(28/*OptElse*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 107: // OptElse ::= T_ELSE CodeBlock 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(28/*OptElse*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 106: // IfStmt ::= T_IF Expr CodeBlock OptElse 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(27/*IfStmt*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 105: // CtorCall ::= T_COLON T_LPAREN OptExprList T_RPAREN 
            {
              Vector RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Object _1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		
						RESULT = _1;
					
              CUP$parser$result = new java_cup.runtime.Symbol(76/*CtorCall*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 104: // OptCtorCall ::= 
            {
              Vector RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(75/*OptCtorCall*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 103: // OptCtorCall ::= CtorCall 
            {
              Vector RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Vector _1 = (Vector)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
						RESULT = _1;
					
              CUP$parser$result = new java_cup.runtime.Symbol(75/*OptCtorCall*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 102: // OptInit ::= 
            {
              STO RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(66/*OptInit*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 101: // OptInit ::= T_ASSIGN Expr 
            {
              STO RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		STO _1 = (STO)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
						RESULT = _1;
					
              CUP$parser$result = new java_cup.runtime.Symbol(66/*OptInit*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 100: // OptRef ::= 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(13/*OptRef*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 99: // OptRef ::= T_AMPERSAND 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(13/*OptRef*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 98: // ParamDecl ::= Type OptRef T_ID OptArrayList 
            {
              String RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(50/*ParamDecl*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 97: // ParamList ::= ParamList T_COMMA ParamDecl 
            {
              Vector RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Vector _1 = (Vector)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int _2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		String _2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
                        RESULT = _1;
                        RESULT.addElement (_2);
                    
              CUP$parser$result = new java_cup.runtime.Symbol(78/*ParamList*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 96: // ParamList ::= ParamDecl 
            {
              Vector RESULT = null;
		int _2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		String _2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
                        RESULT = new Vector ();
                        RESULT.addElement (_2);
                    
              CUP$parser$result = new java_cup.runtime.Symbol(78/*ParamList*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 95: // OptParamList ::= 
            {
              Vector RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(77/*OptParamList*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 94: // OptParamList ::= ParamList 
            {
              Vector RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Vector _1 = (Vector)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;

              CUP$parser$result = new java_cup.runtime.Symbol(77/*OptParamList*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 93: // Stmt ::= WriteStmt 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(24/*Stmt*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 92: // Stmt ::= ReadStmt 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(24/*Stmt*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 91: // Stmt ::= ReturnStmt 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(24/*Stmt*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 90: // Stmt ::= ExitStmt 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(24/*Stmt*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 89: // Stmt ::= ContinueStmt 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(24/*Stmt*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 88: // Stmt ::= BreakStmt 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(24/*Stmt*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 87: // Stmt ::= ForeachStmt 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(24/*Stmt*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 86: // Stmt ::= WhileStmt 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(24/*Stmt*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 85: // Stmt ::= IfStmt 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(24/*Stmt*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 84: // Stmt ::= Expr T_SEMI 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(24/*Stmt*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 83: // Stmt ::= CodeBlock 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(24/*Stmt*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 82: // Stmt ::= ConstDecl 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(24/*Stmt*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 81: // Stmt ::= VarDecl 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(24/*Stmt*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 80: // StmtList ::= StmtList Stmt 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(23/*StmtList*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 79: // StmtList ::= Stmt 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(23/*StmtList*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 78: // OptStmtList ::= 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(22/*OptStmtList*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 77: // OptStmtList ::= StmtList 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(22/*OptStmtList*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 76: // CodeBlock ::= T_LBRACE NT$16 OptStmtList NT$17 T_RBRACE 
            {
              Object RESULT = null;
              // propagate RESULT from NT$16
              if ( ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value != null )
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
              // propagate RESULT from NT$17
              if ( ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value != null )
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;

              CUP$parser$result = new java_cup.runtime.Symbol(25/*CodeBlock*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 75: // NT$17 ::= 
            {
              Object RESULT = null;
 ((MyParser) parser).DoBlockClose(); 
              CUP$parser$result = new java_cup.runtime.Symbol(96/*NT$17*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 74: // NT$16 ::= 
            {
              Object RESULT = null;
 ((MyParser) parser).DoBlockOpen(); 
              CUP$parser$result = new java_cup.runtime.Symbol(95/*NT$16*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 73: // Array ::= T_LBRACKET ConstExpr T_RBRACKET 
            {
              STO RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		STO _1 = (STO)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		
						RESULT = _1;
					
              CUP$parser$result = new java_cup.runtime.Symbol(51/*Array*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 72: // ArrayList ::= ArrayList Array 
            {
              Vector RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Vector _1 = (Vector)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int _2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		STO _2 = (STO)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
    					RESULT = _1;
    					RESULT.add(_2):
    				
              CUP$parser$result = new java_cup.runtime.Symbol(74/*ArrayList*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 71: // ArrayList ::= Array 
            {
              Vector RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		STO _1 = (STO)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
						RESULT = new Vector<STO>();
						RESULT.add(_1):
					
              CUP$parser$result = new java_cup.runtime.Symbol(74/*ArrayList*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 70: // OptArrayList ::= 
            {
              Vector RESULT = null;
		
    					RESULT = new Vector<STO>():
    				
              CUP$parser$result = new java_cup.runtime.Symbol(73/*OptArrayList*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 69: // OptArrayList ::= ArrayList 
            {
              Vector RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Vector _1 = (Vector)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
						RESULT = _1;
					
              CUP$parser$result = new java_cup.runtime.Symbol(73/*OptArrayList*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 68: // Pointer ::= T_STAR 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(43/*Pointer*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 67: // PointerList ::= PointerList Pointer 
            {
              Integer RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Integer _1 = (Integer)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		
    					RESULT = _1 + 1;
    				
              CUP$parser$result = new java_cup.runtime.Symbol(45/*PointerList*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 66: // PointerList ::= Pointer 
            {
              Integer RESULT = null;
		
						RESULT = 1;
					
              CUP$parser$result = new java_cup.runtime.Symbol(45/*PointerList*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 65: // OptPointerList ::= 
            {
              Integer RESULT = null;
		
    					RESULT = 0;
    				
              CUP$parser$result = new java_cup.runtime.Symbol(46/*OptPointerList*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 64: // OptPointerList ::= PointerList 
            {
              Integer RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Integer _1 = (Integer)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
						RESULT = _1;
					
              CUP$parser$result = new java_cup.runtime.Symbol(46/*OptPointerList*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 63: // ReturnType ::= T_VOID 
            {
              Type RESULT = null;
		
    					RESULT = new VoidType();
    				
              CUP$parser$result = new java_cup.runtime.Symbol(72/*ReturnType*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // ReturnType ::= Type 
            {
              Type RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Type _1 = (Type)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
                        RESULT = _1;
                    
              CUP$parser$result = new java_cup.runtime.Symbol(72/*ReturnType*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // StructType ::= T_ID_U 
            {
              Type RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		String _1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
                       RESULT = ((MyParser) parser).DoStructType_ID (_1);
                    
              CUP$parser$result = new java_cup.runtime.Symbol(69/*StructType*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // BasicType ::= T_BOOL 
            {
              Type RESULT = null;
		
                        RESULT = new ConstSTO(_1, new BoolType(), BoolType.toNum(_1));
                    
              CUP$parser$result = new java_cup.runtime.Symbol(67/*BasicType*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // BasicType ::= T_FLOAT 
            {
              Type RESULT = null;
		
                        RESULT = new ConstSTO(_1, new FloatType(), _1);
                    
              CUP$parser$result = new java_cup.runtime.Symbol(67/*BasicType*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // BasicType ::= T_INT 
            {
              Type RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object _1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
                        RESULT = new ConstSTO(_1, new IntType(), _1);
                    
              CUP$parser$result = new java_cup.runtime.Symbol(67/*BasicType*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // DecoratedBasicType ::= BasicType OptPointerList 
            {
              Type RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Type _1 = (Type)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int _2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Integer _2 = (Integer)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
                        RESULT = Type.mergeType(_1, _2);
                    
              CUP$parser$result = new java_cup.runtime.Symbol(68/*DecoratedBasicType*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // DecoratedType ::= StructType PointerList 
            {
              Type RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Type _1 = (Type)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int _2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Integer _2 = (Integer)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
                        RESULT = _1;    // gotta do something here!
                    
              CUP$parser$result = new java_cup.runtime.Symbol(71/*DecoratedType*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // DecoratedType ::= DecoratedBasicType 
            {
              Type RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Type _1 = (Type)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
                        RESULT = _1;
                    
              CUP$parser$result = new java_cup.runtime.Symbol(71/*DecoratedType*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // Type ::= StructType 
            {
              Type RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Type _1 = (Type)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
                        RESULT = _1;
                    
              CUP$parser$result = new java_cup.runtime.Symbol(70/*Type*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // Type ::= DecoratedType 
            {
              Type RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Type _1 = (Type)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
                        RESULT = _1;
                    
              CUP$parser$result = new java_cup.runtime.Symbol(70/*Type*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // FuncDecl ::= T_EXTERN T_FUNCTION T_COLON ReturnType T_ID NT$14 T_LPAREN OptParamList T_RPAREN NT$15 T_SEMI 
            {
              Object RESULT = null;
              // propagate RESULT from NT$14
              if ( ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value != null )
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
              // propagate RESULT from NT$15
              if ( ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value != null )
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).right;
		Type _1 = (Type)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-7)).value;
		int _3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).left;
		int _3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).right;
		String _3 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-6)).value;
		int _4left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int _4right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		Vector _4 = (Vector)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;

              CUP$parser$result = new java_cup.runtime.Symbol(6/*FuncDecl*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-10)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // NT$15 ::= 
            {
              Object RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).right;
		Type _1 = (Type)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		int _3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left;
		int _3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).right;
		String _3 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		int _4left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int _4right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Vector _4 = (Vector)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;

                        ((MyParser) parser).DoFormalParams(_4);
                        ((MyParser) parser).DoFuncDecl_2();
                    
              CUP$parser$result = new java_cup.runtime.Symbol(94/*NT$15*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // NT$14 ::= 
            {
              Object RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Type _1 = (Type)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int _3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		String _3 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;

                        ((MyParser) parser).DoFuncDecl_1(_3);
                    
              CUP$parser$result = new java_cup.runtime.Symbol(93/*NT$14*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // FuncDef ::= T_FUNCTION T_COLON ReturnType OptRef T_ID NT$11 T_LPAREN OptParamList T_RPAREN NT$12 T_LBRACE OptStmtList NT$13 T_RBRACE 
            {
              Object RESULT = null;
              // propagate RESULT from NT$11
              if ( ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-8)).value != null )
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-8)).value;
              // propagate RESULT from NT$12
              if ( ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value != null )
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
              // propagate RESULT from NT$13
              if ( ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value != null )
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-11)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-11)).right;
		Type _1 = (Type)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-11)).value;
		int _2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-10)).left;
		int _2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-10)).right;
		Object _2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-10)).value;
		int _3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-9)).left;
		int _3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-9)).right;
		String _3 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-9)).value;
		int _4left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).left;
		int _4right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).right;
		Vector _4 = (Vector)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-6)).value;

              CUP$parser$result = new java_cup.runtime.Symbol(5/*FuncDef*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-13)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // NT$13 ::= 
            {
              Object RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-9)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-9)).right;
		Type _1 = (Type)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-9)).value;
		int _2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-8)).left;
		int _2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-8)).right;
		Object _2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-8)).value;
		int _3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).left;
		int _3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).right;
		String _3 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-7)).value;
		int _4left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left;
		int _4right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).right;
		Vector _4 = (Vector)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;

                        ((MyParser) parser).DoFuncDecl_2();
                    
              CUP$parser$result = new java_cup.runtime.Symbol(92/*NT$13*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // NT$12 ::= 
            {
              Object RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).right;
		Type _1 = (Type)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-6)).value;
		int _2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left;
		int _2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).right;
		Object _2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		int _3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left;
		int _3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).right;
		String _3 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		int _4left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int _4right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Vector _4 = (Vector)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;

                        ((MyParser) parser).DoFormalParams(_4);
                    
              CUP$parser$result = new java_cup.runtime.Symbol(91/*NT$12*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // NT$11 ::= 
            {
              Object RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Type _1 = (Type)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int _2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int _2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Object _2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int _3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		String _3 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;

                        ((MyParser) parser).SaveLineNum ();
                        ((MyParser) parser).DoFuncDecl_1(_3);
                    
              CUP$parser$result = new java_cup.runtime.Symbol(90/*NT$11*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // FieldFuncDecl ::= FuncDef 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(21/*FieldFuncDecl*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // FieldFuncsList ::= FieldFuncsList FieldFuncDecl 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(20/*FieldFuncsList*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // FieldFuncsList ::= FieldFuncDecl 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(20/*FieldFuncsList*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // OptFieldFuncsList ::= 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(19/*OptFieldFuncsList*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // OptFieldFuncsList ::= FieldFuncsList 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(19/*OptFieldFuncsList*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // DtorDef ::= T_TILDE T_ID_U NT$10 T_LPAREN T_RPAREN T_LBRACE OptStmtList T_RBRACE 
            {
              Object RESULT = null;
              // propagate RESULT from NT$10
              if ( ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value != null )
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		int _3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).left;
		int _3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).right;
		String _3 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-6)).value;
		
                        ((MyParser) parser).DoFuncDecl_2();
                    
              CUP$parser$result = new java_cup.runtime.Symbol(12/*DtorDef*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // NT$10 ::= 
            {
              Object RESULT = null;
		int _3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		String _3 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;

                        ((MyParser) parser).SaveLineNum ();
                        ((MyParser) parser).DoFuncDecl_1("~" + _3);
                    
              CUP$parser$result = new java_cup.runtime.Symbol(89/*NT$10*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // CtorDef ::= T_ID_U NT$8 T_LPAREN OptParamList T_RPAREN NT$9 T_LBRACE OptStmtList T_RBRACE 
            {
              Object RESULT = null;
              // propagate RESULT from NT$8
              if ( ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-7)).value != null )
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-7)).value;
              // propagate RESULT from NT$9
              if ( ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value != null )
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		int _3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-8)).left;
		int _3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-8)).right;
		String _3 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-8)).value;
		int _4left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left;
		int _4right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).right;
		Vector _4 = (Vector)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		
                        ((MyParser) parser).DoFuncDecl_2();
                    
              CUP$parser$result = new java_cup.runtime.Symbol(11/*CtorDef*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-8)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // NT$9 ::= 
            {
              Object RESULT = null;
		int _3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left;
		int _3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).right;
		String _3 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		int _4left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int _4right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Vector _4 = (Vector)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;

                        ((MyParser) parser).DoFormalParams(_4);
                    
              CUP$parser$result = new java_cup.runtime.Symbol(88/*NT$9*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // NT$8 ::= 
            {
              Object RESULT = null;
		int _3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		String _3 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;

                        ((MyParser) parser).SaveLineNum ();
                        ((MyParser) parser).DoFuncDecl_1(_3);
                    
              CUP$parser$result = new java_cup.runtime.Symbol(87/*NT$8*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // CtorDtorDecl ::= DtorDef 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(18/*CtorDtorDecl*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // CtorDtorDecl ::= CtorDef 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(18/*CtorDtorDecl*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // CtorDtorList ::= CtorDtorList CtorDtorDecl 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(17/*CtorDtorList*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // CtorDtorList ::= CtorDtorDecl 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(17/*CtorDtorList*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // OptCtorDtorList ::= 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(16/*OptCtorDtorList*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // OptCtorDtorList ::= CtorDtorList 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(16/*OptCtorDtorList*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // FieldVarDecl ::= DecoratedType T_ID OptArrayList T_SEMI 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(15/*FieldVarDecl*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // FieldVarsList ::= FieldVarsList FieldVarDecl 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(14/*FieldVarsList*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // FieldVarsList ::= FieldVarDecl 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(14/*FieldVarsList*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // StructdefDecl ::= T_STRUCTDEF T_ID_U T_LBRACE NT$5 FieldVarsList OptCtorDtorList NT$6 OptFieldFuncsList NT$7 T_RBRACE T_SEMI 
            {
              Object RESULT = null;
              // propagate RESULT from NT$5
              if ( ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-7)).value != null )
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-7)).value;
              // propagate RESULT from NT$6
              if ( ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value != null )
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
              // propagate RESULT from NT$7
              if ( ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value != null )
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-9)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-9)).right;
		String _1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-9)).value;

              CUP$parser$result = new java_cup.runtime.Symbol(10/*StructdefDecl*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-10)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // NT$7 ::= 
            {
              Object RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).right;
		String _1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-6)).value;

                        ((MyParser) parser).DoBlockClose();
                        ((MyParser) parser).DoStructdefDecl (_1);
                    
              CUP$parser$result = new java_cup.runtime.Symbol(86/*NT$7*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // NT$6 ::= 
            {
              Object RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).right;
		String _1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;

                        // Put logic here to create default ctor if needed
                    
              CUP$parser$result = new java_cup.runtime.Symbol(85/*NT$6*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // NT$5 ::= 
            {
              Object RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String _1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;

                        ((MyParser) parser).DoBlockOpen();
                    
              CUP$parser$result = new java_cup.runtime.Symbol(84/*NT$5*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // OptStatic ::= 
            {
              Boolean RESULT = null;
		
						RESULT = false;
					
              CUP$parser$result = new java_cup.runtime.Symbol(44/*OptStatic*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // OptStatic ::= T_STATIC 
            {
              Boolean RESULT = null;
		
						RESULT = true;
					
              CUP$parser$result = new java_cup.runtime.Symbol(44/*OptStatic*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // ConstDecl ::= OptStatic T_CONST BasicType T_ID T_ASSIGN ConstExpr NT$4 T_SEMI 
            {
              Object RESULT = null;
              // propagate RESULT from NT$4
              if ( ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value != null )
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).right;
		Boolean _1 = (Boolean)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-7)).value;
		int _2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left;
		int _2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).right;
		Type _2 = (Type)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		int _3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left;
		int _3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).right;
		String _3 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		int _4left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int _4right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		STO _4 = (STO)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;

              CUP$parser$result = new java_cup.runtime.Symbol(9/*ConstDecl*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // NT$4 ::= 
            {
              Object RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).right;
		Boolean _1 = (Boolean)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		int _2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int _2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		Type _2 = (Type)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		int _3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int _3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		String _3 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int _4left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _4right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		STO _4 = (STO)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;

                        RESULT = ((MyParser) parser).DoConstDecl (_1, _2, _3, _4);
                        ((MyParser) parser).WriteVarDecl(RESULT);
                    
              CUP$parser$result = new java_cup.runtime.Symbol(83/*NT$4*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // VarDecl ::= OptStatic StructType T_ID OptArrayList OptCtorCall NT$3 T_SEMI 
            {
              Object RESULT = null;
              // propagate RESULT from NT$3
              if ( ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value != null )
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).right;
		Boolean _1 = (Boolean)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-6)).value;
		int _2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left;
		int _2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).right;
		Type _2 = (Type)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		int _3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left;
		int _3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).right;
		String _3 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		int _4left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int _4right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		Vector _4 = (Vector)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		int _5left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int _5right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Vector _5 = (Vector)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;

              CUP$parser$result = new java_cup.runtime.Symbol(8/*VarDecl*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // NT$3 ::= 
            {
              Object RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).right;
		Boolean _1 = (Boolean)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		int _2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int _2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		Type _2 = (Type)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		int _3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int _3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		String _3 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int _4left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int _4right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Vector _4 = (Vector)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int _5left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _5right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Vector _5 = (Vector)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;

                        RESULT = ((MyParser) parser).DoVarDecl (_1, _2, _3, _4, _5);
                        ((MyParser) parser).WriteVarDecl(RESULT);
                    
              CUP$parser$result = new java_cup.runtime.Symbol(82/*NT$3*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // VarDecl ::= OptStatic DecoratedType T_ID OptArrayList OptInit NT$2 T_SEMI 
            {
              Object RESULT = null;
              // propagate RESULT from NT$2
              if ( ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value != null )
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).right;
		Boolean _1 = (Boolean)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-6)).value;
		int _2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left;
		int _2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).right;
		Type _2 = (Type)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		int _3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left;
		int _3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).right;
		String _3 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		int _4left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int _4right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		Vector _4 = (Vector)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		int _5left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int _5right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		STO _5 = (STO)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;

              CUP$parser$result = new java_cup.runtime.Symbol(8/*VarDecl*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // NT$2 ::= 
            {
              Object RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).right;
		Boolean _1 = (Boolean)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		int _2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int _2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		Type _2 = (Type)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		int _3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int _3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		String _3 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int _4left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int _4right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Vector _4 = (Vector)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int _5left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _5right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		STO _5 = (STO)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;

                        RESULT = ((MyParser) parser).DoVarDecl (_1, _2, _3, _4, _5);
                        ((MyParser) parser).WriteVarDecl(RESULT);
                    
              CUP$parser$result = new java_cup.runtime.Symbol(81/*NT$2*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // ExternDecl ::= T_EXTERN DecoratedBasicType T_ID OptArrayList NT$1 T_SEMI 
            {
              Object RESULT = null;
              // propagate RESULT from NT$1
              if ( ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value != null )
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int _2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left;
		int _2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).right;
		Type _2 = (Type)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		int _3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int _3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		String _3 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		int _4left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int _4right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Vector _4 = (Vector)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;

              CUP$parser$result = new java_cup.runtime.Symbol(7/*ExternDecl*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // NT$1 ::= 
            {
              Object RESULT = null;
		int _2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int _2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Type _2 = (Type)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int _3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int _3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String _3 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int _4left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _4right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Vector _4 = (Vector)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;

                        ((MyParser) parser).DoExternDecl (_2, _3, _4);
                    
              CUP$parser$result = new java_cup.runtime.Symbol(80/*NT$1*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // GlobalDecl ::= FuncDef 
            {
              Object RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object _1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
					RESULT = _1.getName();
				
              CUP$parser$result = new java_cup.runtime.Symbol(4/*GlobalDecl*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // GlobalDecl ::= FuncDecl 
            {
              Object RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object _1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
					RESULT = _1;
				
              CUP$parser$result = new java_cup.runtime.Symbol(4/*GlobalDecl*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // GlobalDecl ::= StructdefDecl 
            {
              Object RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object _1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
					RESULT = _1;
				
              CUP$parser$result = new java_cup.runtime.Symbol(4/*GlobalDecl*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // GlobalDecl ::= ConstDecl 
            {
              Object RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object _1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
					RESULT = _1;
				
              CUP$parser$result = new java_cup.runtime.Symbol(4/*GlobalDecl*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // GlobalDecl ::= VarDecl 
            {
              Object RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object _1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
					RESULT = _1;
				
              CUP$parser$result = new java_cup.runtime.Symbol(4/*GlobalDecl*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // GlobalDecl ::= ExternDecl 
            {
              Object RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object _1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
					RESULT = _1;
				
              CUP$parser$result = new java_cup.runtime.Symbol(4/*GlobalDecl*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // GlobalDecls ::= GlobalDecls GlobalDecl 
            {
              Object RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object _1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
    				System.out.println(_1);
    			
              CUP$parser$result = new java_cup.runtime.Symbol(3/*GlobalDecls*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // GlobalDecls ::= GlobalDecl 
            {
              Object RESULT = null;
		int _1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int _1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object _1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
					System.out.println(_1);
				
              CUP$parser$result = new java_cup.runtime.Symbol(3/*GlobalDecls*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // OptGlobalDecls ::= 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(2/*OptGlobalDecls*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // OptGlobalDecls ::= GlobalDecls 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(2/*OptGlobalDecls*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // $START ::= Program EOF 
            {
              Object RESULT = null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		RESULT = start_val;
              CUP$parser$result = new java_cup.runtime.Symbol(0/*$START*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          /* ACCEPT */
          CUP$parser$parser.done_parsing();
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // Program ::= NT$0 OptGlobalDecls 
            {
              Object RESULT = null;
              // propagate RESULT from NT$0
              if ( ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value != null )
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		
                        ((MyParser) parser).DoProgramEnd();
                    
              CUP$parser$result = new java_cup.runtime.Symbol(1/*Program*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // NT$0 ::= 
            {
              Object RESULT = null;

                        ((MyParser) parser).DoProgramStart(); 
                    
              CUP$parser$result = new java_cup.runtime.Symbol(79/*NT$0*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number found in internal parse table");

        }
    }
}

